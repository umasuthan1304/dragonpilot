#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_7959907782308194627) {
   out_7959907782308194627[0] = 0;
   out_7959907782308194627[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_7959907782308194627[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_7959907782308194627[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_7959907782308194627[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_7959907782308194627[5] = -sin(in_vec[1]);
   out_7959907782308194627[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7959907782308194627[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7959907782308194627[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_7959907782308194627[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_7959907782308194627[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_7959907782308194627[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_7959907782308194627[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_7959907782308194627[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_7959907782308194627[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_7959907782308194627[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_7959907782308194627[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_7959907782308194627[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_6929774310989775988) {
   out_6929774310989775988[0] = delta_x[0] + nom_x[0];
   out_6929774310989775988[1] = delta_x[1] + nom_x[1];
   out_6929774310989775988[2] = delta_x[2] + nom_x[2];
   out_6929774310989775988[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_6929774310989775988[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_6929774310989775988[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_6929774310989775988[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_6929774310989775988[7] = delta_x[6] + nom_x[7];
   out_6929774310989775988[8] = delta_x[7] + nom_x[8];
   out_6929774310989775988[9] = delta_x[8] + nom_x[9];
   out_6929774310989775988[10] = delta_x[9] + nom_x[10];
   out_6929774310989775988[11] = delta_x[10] + nom_x[11];
   out_6929774310989775988[12] = delta_x[11] + nom_x[12];
   out_6929774310989775988[13] = delta_x[12] + nom_x[13];
   out_6929774310989775988[14] = delta_x[13] + nom_x[14];
   out_6929774310989775988[15] = delta_x[14] + nom_x[15];
   out_6929774310989775988[16] = delta_x[15] + nom_x[16];
   out_6929774310989775988[17] = delta_x[16] + nom_x[17];
   out_6929774310989775988[18] = delta_x[17] + nom_x[18];
   out_6929774310989775988[19] = delta_x[18] + nom_x[19];
   out_6929774310989775988[20] = delta_x[19] + nom_x[20];
   out_6929774310989775988[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_6193789776824585571) {
   out_6193789776824585571[0] = -nom_x[0] + true_x[0];
   out_6193789776824585571[1] = -nom_x[1] + true_x[1];
   out_6193789776824585571[2] = -nom_x[2] + true_x[2];
   out_6193789776824585571[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_6193789776824585571[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_6193789776824585571[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_6193789776824585571[6] = -nom_x[7] + true_x[7];
   out_6193789776824585571[7] = -nom_x[8] + true_x[8];
   out_6193789776824585571[8] = -nom_x[9] + true_x[9];
   out_6193789776824585571[9] = -nom_x[10] + true_x[10];
   out_6193789776824585571[10] = -nom_x[11] + true_x[11];
   out_6193789776824585571[11] = -nom_x[12] + true_x[12];
   out_6193789776824585571[12] = -nom_x[13] + true_x[13];
   out_6193789776824585571[13] = -nom_x[14] + true_x[14];
   out_6193789776824585571[14] = -nom_x[15] + true_x[15];
   out_6193789776824585571[15] = -nom_x[16] + true_x[16];
   out_6193789776824585571[16] = -nom_x[17] + true_x[17];
   out_6193789776824585571[17] = -nom_x[18] + true_x[18];
   out_6193789776824585571[18] = -nom_x[19] + true_x[19];
   out_6193789776824585571[19] = -nom_x[20] + true_x[20];
   out_6193789776824585571[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_8547509152961498922) {
   out_8547509152961498922[0] = 1.0;
   out_8547509152961498922[1] = 0;
   out_8547509152961498922[2] = 0;
   out_8547509152961498922[3] = 0;
   out_8547509152961498922[4] = 0;
   out_8547509152961498922[5] = 0;
   out_8547509152961498922[6] = 0;
   out_8547509152961498922[7] = 0;
   out_8547509152961498922[8] = 0;
   out_8547509152961498922[9] = 0;
   out_8547509152961498922[10] = 0;
   out_8547509152961498922[11] = 0;
   out_8547509152961498922[12] = 0;
   out_8547509152961498922[13] = 0;
   out_8547509152961498922[14] = 0;
   out_8547509152961498922[15] = 0;
   out_8547509152961498922[16] = 0;
   out_8547509152961498922[17] = 0;
   out_8547509152961498922[18] = 0;
   out_8547509152961498922[19] = 0;
   out_8547509152961498922[20] = 0;
   out_8547509152961498922[21] = 0;
   out_8547509152961498922[22] = 1.0;
   out_8547509152961498922[23] = 0;
   out_8547509152961498922[24] = 0;
   out_8547509152961498922[25] = 0;
   out_8547509152961498922[26] = 0;
   out_8547509152961498922[27] = 0;
   out_8547509152961498922[28] = 0;
   out_8547509152961498922[29] = 0;
   out_8547509152961498922[30] = 0;
   out_8547509152961498922[31] = 0;
   out_8547509152961498922[32] = 0;
   out_8547509152961498922[33] = 0;
   out_8547509152961498922[34] = 0;
   out_8547509152961498922[35] = 0;
   out_8547509152961498922[36] = 0;
   out_8547509152961498922[37] = 0;
   out_8547509152961498922[38] = 0;
   out_8547509152961498922[39] = 0;
   out_8547509152961498922[40] = 0;
   out_8547509152961498922[41] = 0;
   out_8547509152961498922[42] = 0;
   out_8547509152961498922[43] = 0;
   out_8547509152961498922[44] = 1.0;
   out_8547509152961498922[45] = 0;
   out_8547509152961498922[46] = 0;
   out_8547509152961498922[47] = 0;
   out_8547509152961498922[48] = 0;
   out_8547509152961498922[49] = 0;
   out_8547509152961498922[50] = 0;
   out_8547509152961498922[51] = 0;
   out_8547509152961498922[52] = 0;
   out_8547509152961498922[53] = 0;
   out_8547509152961498922[54] = 0;
   out_8547509152961498922[55] = 0;
   out_8547509152961498922[56] = 0;
   out_8547509152961498922[57] = 0;
   out_8547509152961498922[58] = 0;
   out_8547509152961498922[59] = 0;
   out_8547509152961498922[60] = 0;
   out_8547509152961498922[61] = 0;
   out_8547509152961498922[62] = 0;
   out_8547509152961498922[63] = 0;
   out_8547509152961498922[64] = 0;
   out_8547509152961498922[65] = 0;
   out_8547509152961498922[66] = -0.5*state[4];
   out_8547509152961498922[67] = -0.5*state[5];
   out_8547509152961498922[68] = -0.5*state[6];
   out_8547509152961498922[69] = 0;
   out_8547509152961498922[70] = 0;
   out_8547509152961498922[71] = 0;
   out_8547509152961498922[72] = 0;
   out_8547509152961498922[73] = 0;
   out_8547509152961498922[74] = 0;
   out_8547509152961498922[75] = 0;
   out_8547509152961498922[76] = 0;
   out_8547509152961498922[77] = 0;
   out_8547509152961498922[78] = 0;
   out_8547509152961498922[79] = 0;
   out_8547509152961498922[80] = 0;
   out_8547509152961498922[81] = 0;
   out_8547509152961498922[82] = 0;
   out_8547509152961498922[83] = 0;
   out_8547509152961498922[84] = 0;
   out_8547509152961498922[85] = 0;
   out_8547509152961498922[86] = 0;
   out_8547509152961498922[87] = 0.5*state[3];
   out_8547509152961498922[88] = 0.5*state[6];
   out_8547509152961498922[89] = -0.5*state[5];
   out_8547509152961498922[90] = 0;
   out_8547509152961498922[91] = 0;
   out_8547509152961498922[92] = 0;
   out_8547509152961498922[93] = 0;
   out_8547509152961498922[94] = 0;
   out_8547509152961498922[95] = 0;
   out_8547509152961498922[96] = 0;
   out_8547509152961498922[97] = 0;
   out_8547509152961498922[98] = 0;
   out_8547509152961498922[99] = 0;
   out_8547509152961498922[100] = 0;
   out_8547509152961498922[101] = 0;
   out_8547509152961498922[102] = 0;
   out_8547509152961498922[103] = 0;
   out_8547509152961498922[104] = 0;
   out_8547509152961498922[105] = 0;
   out_8547509152961498922[106] = 0;
   out_8547509152961498922[107] = 0;
   out_8547509152961498922[108] = -0.5*state[6];
   out_8547509152961498922[109] = 0.5*state[3];
   out_8547509152961498922[110] = 0.5*state[4];
   out_8547509152961498922[111] = 0;
   out_8547509152961498922[112] = 0;
   out_8547509152961498922[113] = 0;
   out_8547509152961498922[114] = 0;
   out_8547509152961498922[115] = 0;
   out_8547509152961498922[116] = 0;
   out_8547509152961498922[117] = 0;
   out_8547509152961498922[118] = 0;
   out_8547509152961498922[119] = 0;
   out_8547509152961498922[120] = 0;
   out_8547509152961498922[121] = 0;
   out_8547509152961498922[122] = 0;
   out_8547509152961498922[123] = 0;
   out_8547509152961498922[124] = 0;
   out_8547509152961498922[125] = 0;
   out_8547509152961498922[126] = 0;
   out_8547509152961498922[127] = 0;
   out_8547509152961498922[128] = 0;
   out_8547509152961498922[129] = 0.5*state[5];
   out_8547509152961498922[130] = -0.5*state[4];
   out_8547509152961498922[131] = 0.5*state[3];
   out_8547509152961498922[132] = 0;
   out_8547509152961498922[133] = 0;
   out_8547509152961498922[134] = 0;
   out_8547509152961498922[135] = 0;
   out_8547509152961498922[136] = 0;
   out_8547509152961498922[137] = 0;
   out_8547509152961498922[138] = 0;
   out_8547509152961498922[139] = 0;
   out_8547509152961498922[140] = 0;
   out_8547509152961498922[141] = 0;
   out_8547509152961498922[142] = 0;
   out_8547509152961498922[143] = 0;
   out_8547509152961498922[144] = 0;
   out_8547509152961498922[145] = 0;
   out_8547509152961498922[146] = 0;
   out_8547509152961498922[147] = 0;
   out_8547509152961498922[148] = 0;
   out_8547509152961498922[149] = 0;
   out_8547509152961498922[150] = 0;
   out_8547509152961498922[151] = 0;
   out_8547509152961498922[152] = 0;
   out_8547509152961498922[153] = 1.0;
   out_8547509152961498922[154] = 0;
   out_8547509152961498922[155] = 0;
   out_8547509152961498922[156] = 0;
   out_8547509152961498922[157] = 0;
   out_8547509152961498922[158] = 0;
   out_8547509152961498922[159] = 0;
   out_8547509152961498922[160] = 0;
   out_8547509152961498922[161] = 0;
   out_8547509152961498922[162] = 0;
   out_8547509152961498922[163] = 0;
   out_8547509152961498922[164] = 0;
   out_8547509152961498922[165] = 0;
   out_8547509152961498922[166] = 0;
   out_8547509152961498922[167] = 0;
   out_8547509152961498922[168] = 0;
   out_8547509152961498922[169] = 0;
   out_8547509152961498922[170] = 0;
   out_8547509152961498922[171] = 0;
   out_8547509152961498922[172] = 0;
   out_8547509152961498922[173] = 0;
   out_8547509152961498922[174] = 0;
   out_8547509152961498922[175] = 1.0;
   out_8547509152961498922[176] = 0;
   out_8547509152961498922[177] = 0;
   out_8547509152961498922[178] = 0;
   out_8547509152961498922[179] = 0;
   out_8547509152961498922[180] = 0;
   out_8547509152961498922[181] = 0;
   out_8547509152961498922[182] = 0;
   out_8547509152961498922[183] = 0;
   out_8547509152961498922[184] = 0;
   out_8547509152961498922[185] = 0;
   out_8547509152961498922[186] = 0;
   out_8547509152961498922[187] = 0;
   out_8547509152961498922[188] = 0;
   out_8547509152961498922[189] = 0;
   out_8547509152961498922[190] = 0;
   out_8547509152961498922[191] = 0;
   out_8547509152961498922[192] = 0;
   out_8547509152961498922[193] = 0;
   out_8547509152961498922[194] = 0;
   out_8547509152961498922[195] = 0;
   out_8547509152961498922[196] = 0;
   out_8547509152961498922[197] = 1.0;
   out_8547509152961498922[198] = 0;
   out_8547509152961498922[199] = 0;
   out_8547509152961498922[200] = 0;
   out_8547509152961498922[201] = 0;
   out_8547509152961498922[202] = 0;
   out_8547509152961498922[203] = 0;
   out_8547509152961498922[204] = 0;
   out_8547509152961498922[205] = 0;
   out_8547509152961498922[206] = 0;
   out_8547509152961498922[207] = 0;
   out_8547509152961498922[208] = 0;
   out_8547509152961498922[209] = 0;
   out_8547509152961498922[210] = 0;
   out_8547509152961498922[211] = 0;
   out_8547509152961498922[212] = 0;
   out_8547509152961498922[213] = 0;
   out_8547509152961498922[214] = 0;
   out_8547509152961498922[215] = 0;
   out_8547509152961498922[216] = 0;
   out_8547509152961498922[217] = 0;
   out_8547509152961498922[218] = 0;
   out_8547509152961498922[219] = 1.0;
   out_8547509152961498922[220] = 0;
   out_8547509152961498922[221] = 0;
   out_8547509152961498922[222] = 0;
   out_8547509152961498922[223] = 0;
   out_8547509152961498922[224] = 0;
   out_8547509152961498922[225] = 0;
   out_8547509152961498922[226] = 0;
   out_8547509152961498922[227] = 0;
   out_8547509152961498922[228] = 0;
   out_8547509152961498922[229] = 0;
   out_8547509152961498922[230] = 0;
   out_8547509152961498922[231] = 0;
   out_8547509152961498922[232] = 0;
   out_8547509152961498922[233] = 0;
   out_8547509152961498922[234] = 0;
   out_8547509152961498922[235] = 0;
   out_8547509152961498922[236] = 0;
   out_8547509152961498922[237] = 0;
   out_8547509152961498922[238] = 0;
   out_8547509152961498922[239] = 0;
   out_8547509152961498922[240] = 0;
   out_8547509152961498922[241] = 1.0;
   out_8547509152961498922[242] = 0;
   out_8547509152961498922[243] = 0;
   out_8547509152961498922[244] = 0;
   out_8547509152961498922[245] = 0;
   out_8547509152961498922[246] = 0;
   out_8547509152961498922[247] = 0;
   out_8547509152961498922[248] = 0;
   out_8547509152961498922[249] = 0;
   out_8547509152961498922[250] = 0;
   out_8547509152961498922[251] = 0;
   out_8547509152961498922[252] = 0;
   out_8547509152961498922[253] = 0;
   out_8547509152961498922[254] = 0;
   out_8547509152961498922[255] = 0;
   out_8547509152961498922[256] = 0;
   out_8547509152961498922[257] = 0;
   out_8547509152961498922[258] = 0;
   out_8547509152961498922[259] = 0;
   out_8547509152961498922[260] = 0;
   out_8547509152961498922[261] = 0;
   out_8547509152961498922[262] = 0;
   out_8547509152961498922[263] = 1.0;
   out_8547509152961498922[264] = 0;
   out_8547509152961498922[265] = 0;
   out_8547509152961498922[266] = 0;
   out_8547509152961498922[267] = 0;
   out_8547509152961498922[268] = 0;
   out_8547509152961498922[269] = 0;
   out_8547509152961498922[270] = 0;
   out_8547509152961498922[271] = 0;
   out_8547509152961498922[272] = 0;
   out_8547509152961498922[273] = 0;
   out_8547509152961498922[274] = 0;
   out_8547509152961498922[275] = 0;
   out_8547509152961498922[276] = 0;
   out_8547509152961498922[277] = 0;
   out_8547509152961498922[278] = 0;
   out_8547509152961498922[279] = 0;
   out_8547509152961498922[280] = 0;
   out_8547509152961498922[281] = 0;
   out_8547509152961498922[282] = 0;
   out_8547509152961498922[283] = 0;
   out_8547509152961498922[284] = 0;
   out_8547509152961498922[285] = 1.0;
   out_8547509152961498922[286] = 0;
   out_8547509152961498922[287] = 0;
   out_8547509152961498922[288] = 0;
   out_8547509152961498922[289] = 0;
   out_8547509152961498922[290] = 0;
   out_8547509152961498922[291] = 0;
   out_8547509152961498922[292] = 0;
   out_8547509152961498922[293] = 0;
   out_8547509152961498922[294] = 0;
   out_8547509152961498922[295] = 0;
   out_8547509152961498922[296] = 0;
   out_8547509152961498922[297] = 0;
   out_8547509152961498922[298] = 0;
   out_8547509152961498922[299] = 0;
   out_8547509152961498922[300] = 0;
   out_8547509152961498922[301] = 0;
   out_8547509152961498922[302] = 0;
   out_8547509152961498922[303] = 0;
   out_8547509152961498922[304] = 0;
   out_8547509152961498922[305] = 0;
   out_8547509152961498922[306] = 0;
   out_8547509152961498922[307] = 1.0;
   out_8547509152961498922[308] = 0;
   out_8547509152961498922[309] = 0;
   out_8547509152961498922[310] = 0;
   out_8547509152961498922[311] = 0;
   out_8547509152961498922[312] = 0;
   out_8547509152961498922[313] = 0;
   out_8547509152961498922[314] = 0;
   out_8547509152961498922[315] = 0;
   out_8547509152961498922[316] = 0;
   out_8547509152961498922[317] = 0;
   out_8547509152961498922[318] = 0;
   out_8547509152961498922[319] = 0;
   out_8547509152961498922[320] = 0;
   out_8547509152961498922[321] = 0;
   out_8547509152961498922[322] = 0;
   out_8547509152961498922[323] = 0;
   out_8547509152961498922[324] = 0;
   out_8547509152961498922[325] = 0;
   out_8547509152961498922[326] = 0;
   out_8547509152961498922[327] = 0;
   out_8547509152961498922[328] = 0;
   out_8547509152961498922[329] = 1.0;
   out_8547509152961498922[330] = 0;
   out_8547509152961498922[331] = 0;
   out_8547509152961498922[332] = 0;
   out_8547509152961498922[333] = 0;
   out_8547509152961498922[334] = 0;
   out_8547509152961498922[335] = 0;
   out_8547509152961498922[336] = 0;
   out_8547509152961498922[337] = 0;
   out_8547509152961498922[338] = 0;
   out_8547509152961498922[339] = 0;
   out_8547509152961498922[340] = 0;
   out_8547509152961498922[341] = 0;
   out_8547509152961498922[342] = 0;
   out_8547509152961498922[343] = 0;
   out_8547509152961498922[344] = 0;
   out_8547509152961498922[345] = 0;
   out_8547509152961498922[346] = 0;
   out_8547509152961498922[347] = 0;
   out_8547509152961498922[348] = 0;
   out_8547509152961498922[349] = 0;
   out_8547509152961498922[350] = 0;
   out_8547509152961498922[351] = 1.0;
   out_8547509152961498922[352] = 0;
   out_8547509152961498922[353] = 0;
   out_8547509152961498922[354] = 0;
   out_8547509152961498922[355] = 0;
   out_8547509152961498922[356] = 0;
   out_8547509152961498922[357] = 0;
   out_8547509152961498922[358] = 0;
   out_8547509152961498922[359] = 0;
   out_8547509152961498922[360] = 0;
   out_8547509152961498922[361] = 0;
   out_8547509152961498922[362] = 0;
   out_8547509152961498922[363] = 0;
   out_8547509152961498922[364] = 0;
   out_8547509152961498922[365] = 0;
   out_8547509152961498922[366] = 0;
   out_8547509152961498922[367] = 0;
   out_8547509152961498922[368] = 0;
   out_8547509152961498922[369] = 0;
   out_8547509152961498922[370] = 0;
   out_8547509152961498922[371] = 0;
   out_8547509152961498922[372] = 0;
   out_8547509152961498922[373] = 1.0;
   out_8547509152961498922[374] = 0;
   out_8547509152961498922[375] = 0;
   out_8547509152961498922[376] = 0;
   out_8547509152961498922[377] = 0;
   out_8547509152961498922[378] = 0;
   out_8547509152961498922[379] = 0;
   out_8547509152961498922[380] = 0;
   out_8547509152961498922[381] = 0;
   out_8547509152961498922[382] = 0;
   out_8547509152961498922[383] = 0;
   out_8547509152961498922[384] = 0;
   out_8547509152961498922[385] = 0;
   out_8547509152961498922[386] = 0;
   out_8547509152961498922[387] = 0;
   out_8547509152961498922[388] = 0;
   out_8547509152961498922[389] = 0;
   out_8547509152961498922[390] = 0;
   out_8547509152961498922[391] = 0;
   out_8547509152961498922[392] = 0;
   out_8547509152961498922[393] = 0;
   out_8547509152961498922[394] = 0;
   out_8547509152961498922[395] = 1.0;
   out_8547509152961498922[396] = 0;
   out_8547509152961498922[397] = 0;
   out_8547509152961498922[398] = 0;
   out_8547509152961498922[399] = 0;
   out_8547509152961498922[400] = 0;
   out_8547509152961498922[401] = 0;
   out_8547509152961498922[402] = 0;
   out_8547509152961498922[403] = 0;
   out_8547509152961498922[404] = 0;
   out_8547509152961498922[405] = 0;
   out_8547509152961498922[406] = 0;
   out_8547509152961498922[407] = 0;
   out_8547509152961498922[408] = 0;
   out_8547509152961498922[409] = 0;
   out_8547509152961498922[410] = 0;
   out_8547509152961498922[411] = 0;
   out_8547509152961498922[412] = 0;
   out_8547509152961498922[413] = 0;
   out_8547509152961498922[414] = 0;
   out_8547509152961498922[415] = 0;
   out_8547509152961498922[416] = 0;
   out_8547509152961498922[417] = 1.0;
   out_8547509152961498922[418] = 0;
   out_8547509152961498922[419] = 0;
   out_8547509152961498922[420] = 0;
   out_8547509152961498922[421] = 0;
   out_8547509152961498922[422] = 0;
   out_8547509152961498922[423] = 0;
   out_8547509152961498922[424] = 0;
   out_8547509152961498922[425] = 0;
   out_8547509152961498922[426] = 0;
   out_8547509152961498922[427] = 0;
   out_8547509152961498922[428] = 0;
   out_8547509152961498922[429] = 0;
   out_8547509152961498922[430] = 0;
   out_8547509152961498922[431] = 0;
   out_8547509152961498922[432] = 0;
   out_8547509152961498922[433] = 0;
   out_8547509152961498922[434] = 0;
   out_8547509152961498922[435] = 0;
   out_8547509152961498922[436] = 0;
   out_8547509152961498922[437] = 0;
   out_8547509152961498922[438] = 0;
   out_8547509152961498922[439] = 1.0;
   out_8547509152961498922[440] = 0;
   out_8547509152961498922[441] = 0;
   out_8547509152961498922[442] = 0;
   out_8547509152961498922[443] = 0;
   out_8547509152961498922[444] = 0;
   out_8547509152961498922[445] = 0;
   out_8547509152961498922[446] = 0;
   out_8547509152961498922[447] = 0;
   out_8547509152961498922[448] = 0;
   out_8547509152961498922[449] = 0;
   out_8547509152961498922[450] = 0;
   out_8547509152961498922[451] = 0;
   out_8547509152961498922[452] = 0;
   out_8547509152961498922[453] = 0;
   out_8547509152961498922[454] = 0;
   out_8547509152961498922[455] = 0;
   out_8547509152961498922[456] = 0;
   out_8547509152961498922[457] = 0;
   out_8547509152961498922[458] = 0;
   out_8547509152961498922[459] = 0;
   out_8547509152961498922[460] = 0;
   out_8547509152961498922[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_8100393315288221642) {
   out_8100393315288221642[0] = dt*state[7] + state[0];
   out_8100393315288221642[1] = dt*state[8] + state[1];
   out_8100393315288221642[2] = dt*state[9] + state[2];
   out_8100393315288221642[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_8100393315288221642[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_8100393315288221642[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_8100393315288221642[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_8100393315288221642[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_8100393315288221642[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_8100393315288221642[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_8100393315288221642[10] = state[10];
   out_8100393315288221642[11] = state[11];
   out_8100393315288221642[12] = state[12];
   out_8100393315288221642[13] = state[13];
   out_8100393315288221642[14] = state[14];
   out_8100393315288221642[15] = state[15];
   out_8100393315288221642[16] = state[16];
   out_8100393315288221642[17] = state[17];
   out_8100393315288221642[18] = state[18];
   out_8100393315288221642[19] = state[19];
   out_8100393315288221642[20] = state[20];
   out_8100393315288221642[21] = state[21];
}
void F_fun(double *state, double dt, double *out_7769089323050102648) {
   out_7769089323050102648[0] = 1;
   out_7769089323050102648[1] = 0;
   out_7769089323050102648[2] = 0;
   out_7769089323050102648[3] = 0;
   out_7769089323050102648[4] = 0;
   out_7769089323050102648[5] = 0;
   out_7769089323050102648[6] = dt;
   out_7769089323050102648[7] = 0;
   out_7769089323050102648[8] = 0;
   out_7769089323050102648[9] = 0;
   out_7769089323050102648[10] = 0;
   out_7769089323050102648[11] = 0;
   out_7769089323050102648[12] = 0;
   out_7769089323050102648[13] = 0;
   out_7769089323050102648[14] = 0;
   out_7769089323050102648[15] = 0;
   out_7769089323050102648[16] = 0;
   out_7769089323050102648[17] = 0;
   out_7769089323050102648[18] = 0;
   out_7769089323050102648[19] = 0;
   out_7769089323050102648[20] = 0;
   out_7769089323050102648[21] = 0;
   out_7769089323050102648[22] = 1;
   out_7769089323050102648[23] = 0;
   out_7769089323050102648[24] = 0;
   out_7769089323050102648[25] = 0;
   out_7769089323050102648[26] = 0;
   out_7769089323050102648[27] = 0;
   out_7769089323050102648[28] = dt;
   out_7769089323050102648[29] = 0;
   out_7769089323050102648[30] = 0;
   out_7769089323050102648[31] = 0;
   out_7769089323050102648[32] = 0;
   out_7769089323050102648[33] = 0;
   out_7769089323050102648[34] = 0;
   out_7769089323050102648[35] = 0;
   out_7769089323050102648[36] = 0;
   out_7769089323050102648[37] = 0;
   out_7769089323050102648[38] = 0;
   out_7769089323050102648[39] = 0;
   out_7769089323050102648[40] = 0;
   out_7769089323050102648[41] = 0;
   out_7769089323050102648[42] = 0;
   out_7769089323050102648[43] = 0;
   out_7769089323050102648[44] = 1;
   out_7769089323050102648[45] = 0;
   out_7769089323050102648[46] = 0;
   out_7769089323050102648[47] = 0;
   out_7769089323050102648[48] = 0;
   out_7769089323050102648[49] = 0;
   out_7769089323050102648[50] = dt;
   out_7769089323050102648[51] = 0;
   out_7769089323050102648[52] = 0;
   out_7769089323050102648[53] = 0;
   out_7769089323050102648[54] = 0;
   out_7769089323050102648[55] = 0;
   out_7769089323050102648[56] = 0;
   out_7769089323050102648[57] = 0;
   out_7769089323050102648[58] = 0;
   out_7769089323050102648[59] = 0;
   out_7769089323050102648[60] = 0;
   out_7769089323050102648[61] = 0;
   out_7769089323050102648[62] = 0;
   out_7769089323050102648[63] = 0;
   out_7769089323050102648[64] = 0;
   out_7769089323050102648[65] = 0;
   out_7769089323050102648[66] = 1;
   out_7769089323050102648[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7769089323050102648[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_7769089323050102648[69] = 0;
   out_7769089323050102648[70] = 0;
   out_7769089323050102648[71] = 0;
   out_7769089323050102648[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7769089323050102648[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7769089323050102648[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7769089323050102648[75] = 0;
   out_7769089323050102648[76] = 0;
   out_7769089323050102648[77] = 0;
   out_7769089323050102648[78] = 0;
   out_7769089323050102648[79] = 0;
   out_7769089323050102648[80] = 0;
   out_7769089323050102648[81] = 0;
   out_7769089323050102648[82] = 0;
   out_7769089323050102648[83] = 0;
   out_7769089323050102648[84] = 0;
   out_7769089323050102648[85] = 0;
   out_7769089323050102648[86] = 0;
   out_7769089323050102648[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_7769089323050102648[88] = 1;
   out_7769089323050102648[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_7769089323050102648[90] = 0;
   out_7769089323050102648[91] = 0;
   out_7769089323050102648[92] = 0;
   out_7769089323050102648[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7769089323050102648[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7769089323050102648[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7769089323050102648[96] = 0;
   out_7769089323050102648[97] = 0;
   out_7769089323050102648[98] = 0;
   out_7769089323050102648[99] = 0;
   out_7769089323050102648[100] = 0;
   out_7769089323050102648[101] = 0;
   out_7769089323050102648[102] = 0;
   out_7769089323050102648[103] = 0;
   out_7769089323050102648[104] = 0;
   out_7769089323050102648[105] = 0;
   out_7769089323050102648[106] = 0;
   out_7769089323050102648[107] = 0;
   out_7769089323050102648[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_7769089323050102648[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_7769089323050102648[110] = 1;
   out_7769089323050102648[111] = 0;
   out_7769089323050102648[112] = 0;
   out_7769089323050102648[113] = 0;
   out_7769089323050102648[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7769089323050102648[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7769089323050102648[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7769089323050102648[117] = 0;
   out_7769089323050102648[118] = 0;
   out_7769089323050102648[119] = 0;
   out_7769089323050102648[120] = 0;
   out_7769089323050102648[121] = 0;
   out_7769089323050102648[122] = 0;
   out_7769089323050102648[123] = 0;
   out_7769089323050102648[124] = 0;
   out_7769089323050102648[125] = 0;
   out_7769089323050102648[126] = 0;
   out_7769089323050102648[127] = 0;
   out_7769089323050102648[128] = 0;
   out_7769089323050102648[129] = 0;
   out_7769089323050102648[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7769089323050102648[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_7769089323050102648[132] = 1;
   out_7769089323050102648[133] = 0;
   out_7769089323050102648[134] = 0;
   out_7769089323050102648[135] = 0;
   out_7769089323050102648[136] = 0;
   out_7769089323050102648[137] = 0;
   out_7769089323050102648[138] = 0;
   out_7769089323050102648[139] = 0;
   out_7769089323050102648[140] = 0;
   out_7769089323050102648[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7769089323050102648[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7769089323050102648[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7769089323050102648[144] = 0;
   out_7769089323050102648[145] = 0;
   out_7769089323050102648[146] = 0;
   out_7769089323050102648[147] = 0;
   out_7769089323050102648[148] = 0;
   out_7769089323050102648[149] = 0;
   out_7769089323050102648[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_7769089323050102648[151] = 0;
   out_7769089323050102648[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_7769089323050102648[153] = 0;
   out_7769089323050102648[154] = 1;
   out_7769089323050102648[155] = 0;
   out_7769089323050102648[156] = 0;
   out_7769089323050102648[157] = 0;
   out_7769089323050102648[158] = 0;
   out_7769089323050102648[159] = 0;
   out_7769089323050102648[160] = 0;
   out_7769089323050102648[161] = 0;
   out_7769089323050102648[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_7769089323050102648[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7769089323050102648[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7769089323050102648[165] = 0;
   out_7769089323050102648[166] = 0;
   out_7769089323050102648[167] = 0;
   out_7769089323050102648[168] = 0;
   out_7769089323050102648[169] = 0;
   out_7769089323050102648[170] = 0;
   out_7769089323050102648[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_7769089323050102648[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_7769089323050102648[173] = 0;
   out_7769089323050102648[174] = 0;
   out_7769089323050102648[175] = 0;
   out_7769089323050102648[176] = 1;
   out_7769089323050102648[177] = 0;
   out_7769089323050102648[178] = 0;
   out_7769089323050102648[179] = 0;
   out_7769089323050102648[180] = 0;
   out_7769089323050102648[181] = 0;
   out_7769089323050102648[182] = 0;
   out_7769089323050102648[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_7769089323050102648[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_7769089323050102648[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7769089323050102648[186] = 0;
   out_7769089323050102648[187] = 0;
   out_7769089323050102648[188] = 0;
   out_7769089323050102648[189] = 0;
   out_7769089323050102648[190] = 0;
   out_7769089323050102648[191] = 0;
   out_7769089323050102648[192] = 0;
   out_7769089323050102648[193] = 0;
   out_7769089323050102648[194] = 0;
   out_7769089323050102648[195] = 0;
   out_7769089323050102648[196] = 0;
   out_7769089323050102648[197] = 0;
   out_7769089323050102648[198] = 1;
   out_7769089323050102648[199] = 0;
   out_7769089323050102648[200] = 0;
   out_7769089323050102648[201] = 0;
   out_7769089323050102648[202] = 0;
   out_7769089323050102648[203] = 0;
   out_7769089323050102648[204] = 0;
   out_7769089323050102648[205] = 0;
   out_7769089323050102648[206] = 0;
   out_7769089323050102648[207] = 0;
   out_7769089323050102648[208] = 0;
   out_7769089323050102648[209] = 0;
   out_7769089323050102648[210] = 0;
   out_7769089323050102648[211] = 0;
   out_7769089323050102648[212] = 0;
   out_7769089323050102648[213] = 0;
   out_7769089323050102648[214] = 0;
   out_7769089323050102648[215] = 0;
   out_7769089323050102648[216] = 0;
   out_7769089323050102648[217] = 0;
   out_7769089323050102648[218] = 0;
   out_7769089323050102648[219] = 0;
   out_7769089323050102648[220] = 1;
   out_7769089323050102648[221] = 0;
   out_7769089323050102648[222] = 0;
   out_7769089323050102648[223] = 0;
   out_7769089323050102648[224] = 0;
   out_7769089323050102648[225] = 0;
   out_7769089323050102648[226] = 0;
   out_7769089323050102648[227] = 0;
   out_7769089323050102648[228] = 0;
   out_7769089323050102648[229] = 0;
   out_7769089323050102648[230] = 0;
   out_7769089323050102648[231] = 0;
   out_7769089323050102648[232] = 0;
   out_7769089323050102648[233] = 0;
   out_7769089323050102648[234] = 0;
   out_7769089323050102648[235] = 0;
   out_7769089323050102648[236] = 0;
   out_7769089323050102648[237] = 0;
   out_7769089323050102648[238] = 0;
   out_7769089323050102648[239] = 0;
   out_7769089323050102648[240] = 0;
   out_7769089323050102648[241] = 0;
   out_7769089323050102648[242] = 1;
   out_7769089323050102648[243] = 0;
   out_7769089323050102648[244] = 0;
   out_7769089323050102648[245] = 0;
   out_7769089323050102648[246] = 0;
   out_7769089323050102648[247] = 0;
   out_7769089323050102648[248] = 0;
   out_7769089323050102648[249] = 0;
   out_7769089323050102648[250] = 0;
   out_7769089323050102648[251] = 0;
   out_7769089323050102648[252] = 0;
   out_7769089323050102648[253] = 0;
   out_7769089323050102648[254] = 0;
   out_7769089323050102648[255] = 0;
   out_7769089323050102648[256] = 0;
   out_7769089323050102648[257] = 0;
   out_7769089323050102648[258] = 0;
   out_7769089323050102648[259] = 0;
   out_7769089323050102648[260] = 0;
   out_7769089323050102648[261] = 0;
   out_7769089323050102648[262] = 0;
   out_7769089323050102648[263] = 0;
   out_7769089323050102648[264] = 1;
   out_7769089323050102648[265] = 0;
   out_7769089323050102648[266] = 0;
   out_7769089323050102648[267] = 0;
   out_7769089323050102648[268] = 0;
   out_7769089323050102648[269] = 0;
   out_7769089323050102648[270] = 0;
   out_7769089323050102648[271] = 0;
   out_7769089323050102648[272] = 0;
   out_7769089323050102648[273] = 0;
   out_7769089323050102648[274] = 0;
   out_7769089323050102648[275] = 0;
   out_7769089323050102648[276] = 0;
   out_7769089323050102648[277] = 0;
   out_7769089323050102648[278] = 0;
   out_7769089323050102648[279] = 0;
   out_7769089323050102648[280] = 0;
   out_7769089323050102648[281] = 0;
   out_7769089323050102648[282] = 0;
   out_7769089323050102648[283] = 0;
   out_7769089323050102648[284] = 0;
   out_7769089323050102648[285] = 0;
   out_7769089323050102648[286] = 1;
   out_7769089323050102648[287] = 0;
   out_7769089323050102648[288] = 0;
   out_7769089323050102648[289] = 0;
   out_7769089323050102648[290] = 0;
   out_7769089323050102648[291] = 0;
   out_7769089323050102648[292] = 0;
   out_7769089323050102648[293] = 0;
   out_7769089323050102648[294] = 0;
   out_7769089323050102648[295] = 0;
   out_7769089323050102648[296] = 0;
   out_7769089323050102648[297] = 0;
   out_7769089323050102648[298] = 0;
   out_7769089323050102648[299] = 0;
   out_7769089323050102648[300] = 0;
   out_7769089323050102648[301] = 0;
   out_7769089323050102648[302] = 0;
   out_7769089323050102648[303] = 0;
   out_7769089323050102648[304] = 0;
   out_7769089323050102648[305] = 0;
   out_7769089323050102648[306] = 0;
   out_7769089323050102648[307] = 0;
   out_7769089323050102648[308] = 1;
   out_7769089323050102648[309] = 0;
   out_7769089323050102648[310] = 0;
   out_7769089323050102648[311] = 0;
   out_7769089323050102648[312] = 0;
   out_7769089323050102648[313] = 0;
   out_7769089323050102648[314] = 0;
   out_7769089323050102648[315] = 0;
   out_7769089323050102648[316] = 0;
   out_7769089323050102648[317] = 0;
   out_7769089323050102648[318] = 0;
   out_7769089323050102648[319] = 0;
   out_7769089323050102648[320] = 0;
   out_7769089323050102648[321] = 0;
   out_7769089323050102648[322] = 0;
   out_7769089323050102648[323] = 0;
   out_7769089323050102648[324] = 0;
   out_7769089323050102648[325] = 0;
   out_7769089323050102648[326] = 0;
   out_7769089323050102648[327] = 0;
   out_7769089323050102648[328] = 0;
   out_7769089323050102648[329] = 0;
   out_7769089323050102648[330] = 1;
   out_7769089323050102648[331] = 0;
   out_7769089323050102648[332] = 0;
   out_7769089323050102648[333] = 0;
   out_7769089323050102648[334] = 0;
   out_7769089323050102648[335] = 0;
   out_7769089323050102648[336] = 0;
   out_7769089323050102648[337] = 0;
   out_7769089323050102648[338] = 0;
   out_7769089323050102648[339] = 0;
   out_7769089323050102648[340] = 0;
   out_7769089323050102648[341] = 0;
   out_7769089323050102648[342] = 0;
   out_7769089323050102648[343] = 0;
   out_7769089323050102648[344] = 0;
   out_7769089323050102648[345] = 0;
   out_7769089323050102648[346] = 0;
   out_7769089323050102648[347] = 0;
   out_7769089323050102648[348] = 0;
   out_7769089323050102648[349] = 0;
   out_7769089323050102648[350] = 0;
   out_7769089323050102648[351] = 0;
   out_7769089323050102648[352] = 1;
   out_7769089323050102648[353] = 0;
   out_7769089323050102648[354] = 0;
   out_7769089323050102648[355] = 0;
   out_7769089323050102648[356] = 0;
   out_7769089323050102648[357] = 0;
   out_7769089323050102648[358] = 0;
   out_7769089323050102648[359] = 0;
   out_7769089323050102648[360] = 0;
   out_7769089323050102648[361] = 0;
   out_7769089323050102648[362] = 0;
   out_7769089323050102648[363] = 0;
   out_7769089323050102648[364] = 0;
   out_7769089323050102648[365] = 0;
   out_7769089323050102648[366] = 0;
   out_7769089323050102648[367] = 0;
   out_7769089323050102648[368] = 0;
   out_7769089323050102648[369] = 0;
   out_7769089323050102648[370] = 0;
   out_7769089323050102648[371] = 0;
   out_7769089323050102648[372] = 0;
   out_7769089323050102648[373] = 0;
   out_7769089323050102648[374] = 1;
   out_7769089323050102648[375] = 0;
   out_7769089323050102648[376] = 0;
   out_7769089323050102648[377] = 0;
   out_7769089323050102648[378] = 0;
   out_7769089323050102648[379] = 0;
   out_7769089323050102648[380] = 0;
   out_7769089323050102648[381] = 0;
   out_7769089323050102648[382] = 0;
   out_7769089323050102648[383] = 0;
   out_7769089323050102648[384] = 0;
   out_7769089323050102648[385] = 0;
   out_7769089323050102648[386] = 0;
   out_7769089323050102648[387] = 0;
   out_7769089323050102648[388] = 0;
   out_7769089323050102648[389] = 0;
   out_7769089323050102648[390] = 0;
   out_7769089323050102648[391] = 0;
   out_7769089323050102648[392] = 0;
   out_7769089323050102648[393] = 0;
   out_7769089323050102648[394] = 0;
   out_7769089323050102648[395] = 0;
   out_7769089323050102648[396] = 1;
   out_7769089323050102648[397] = 0;
   out_7769089323050102648[398] = 0;
   out_7769089323050102648[399] = 0;
   out_7769089323050102648[400] = 0;
   out_7769089323050102648[401] = 0;
   out_7769089323050102648[402] = 0;
   out_7769089323050102648[403] = 0;
   out_7769089323050102648[404] = 0;
   out_7769089323050102648[405] = 0;
   out_7769089323050102648[406] = 0;
   out_7769089323050102648[407] = 0;
   out_7769089323050102648[408] = 0;
   out_7769089323050102648[409] = 0;
   out_7769089323050102648[410] = 0;
   out_7769089323050102648[411] = 0;
   out_7769089323050102648[412] = 0;
   out_7769089323050102648[413] = 0;
   out_7769089323050102648[414] = 0;
   out_7769089323050102648[415] = 0;
   out_7769089323050102648[416] = 0;
   out_7769089323050102648[417] = 0;
   out_7769089323050102648[418] = 1;
   out_7769089323050102648[419] = 0;
   out_7769089323050102648[420] = 0;
   out_7769089323050102648[421] = 0;
   out_7769089323050102648[422] = 0;
   out_7769089323050102648[423] = 0;
   out_7769089323050102648[424] = 0;
   out_7769089323050102648[425] = 0;
   out_7769089323050102648[426] = 0;
   out_7769089323050102648[427] = 0;
   out_7769089323050102648[428] = 0;
   out_7769089323050102648[429] = 0;
   out_7769089323050102648[430] = 0;
   out_7769089323050102648[431] = 0;
   out_7769089323050102648[432] = 0;
   out_7769089323050102648[433] = 0;
   out_7769089323050102648[434] = 0;
   out_7769089323050102648[435] = 0;
   out_7769089323050102648[436] = 0;
   out_7769089323050102648[437] = 0;
   out_7769089323050102648[438] = 0;
   out_7769089323050102648[439] = 0;
   out_7769089323050102648[440] = 1;
}
void h_4(double *state, double *unused, double *out_6579737165675804813) {
   out_6579737165675804813[0] = state[10] + state[13];
   out_6579737165675804813[1] = state[11] + state[14];
   out_6579737165675804813[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_8985066658053328462) {
   out_8985066658053328462[0] = 0;
   out_8985066658053328462[1] = 0;
   out_8985066658053328462[2] = 0;
   out_8985066658053328462[3] = 0;
   out_8985066658053328462[4] = 0;
   out_8985066658053328462[5] = 0;
   out_8985066658053328462[6] = 0;
   out_8985066658053328462[7] = 0;
   out_8985066658053328462[8] = 0;
   out_8985066658053328462[9] = 0;
   out_8985066658053328462[10] = 1;
   out_8985066658053328462[11] = 0;
   out_8985066658053328462[12] = 0;
   out_8985066658053328462[13] = 1;
   out_8985066658053328462[14] = 0;
   out_8985066658053328462[15] = 0;
   out_8985066658053328462[16] = 0;
   out_8985066658053328462[17] = 0;
   out_8985066658053328462[18] = 0;
   out_8985066658053328462[19] = 0;
   out_8985066658053328462[20] = 0;
   out_8985066658053328462[21] = 0;
   out_8985066658053328462[22] = 0;
   out_8985066658053328462[23] = 0;
   out_8985066658053328462[24] = 0;
   out_8985066658053328462[25] = 0;
   out_8985066658053328462[26] = 0;
   out_8985066658053328462[27] = 0;
   out_8985066658053328462[28] = 0;
   out_8985066658053328462[29] = 0;
   out_8985066658053328462[30] = 0;
   out_8985066658053328462[31] = 0;
   out_8985066658053328462[32] = 0;
   out_8985066658053328462[33] = 1;
   out_8985066658053328462[34] = 0;
   out_8985066658053328462[35] = 0;
   out_8985066658053328462[36] = 1;
   out_8985066658053328462[37] = 0;
   out_8985066658053328462[38] = 0;
   out_8985066658053328462[39] = 0;
   out_8985066658053328462[40] = 0;
   out_8985066658053328462[41] = 0;
   out_8985066658053328462[42] = 0;
   out_8985066658053328462[43] = 0;
   out_8985066658053328462[44] = 0;
   out_8985066658053328462[45] = 0;
   out_8985066658053328462[46] = 0;
   out_8985066658053328462[47] = 0;
   out_8985066658053328462[48] = 0;
   out_8985066658053328462[49] = 0;
   out_8985066658053328462[50] = 0;
   out_8985066658053328462[51] = 0;
   out_8985066658053328462[52] = 0;
   out_8985066658053328462[53] = 0;
   out_8985066658053328462[54] = 0;
   out_8985066658053328462[55] = 0;
   out_8985066658053328462[56] = 1;
   out_8985066658053328462[57] = 0;
   out_8985066658053328462[58] = 0;
   out_8985066658053328462[59] = 1;
   out_8985066658053328462[60] = 0;
   out_8985066658053328462[61] = 0;
   out_8985066658053328462[62] = 0;
   out_8985066658053328462[63] = 0;
   out_8985066658053328462[64] = 0;
   out_8985066658053328462[65] = 0;
}
void h_9(double *state, double *unused, double *out_6592276556226636800) {
   out_6592276556226636800[0] = state[10];
   out_6592276556226636800[1] = state[11];
   out_6592276556226636800[2] = state[12];
}
void H_9(double *state, double *unused, double *out_6096205105773249120) {
   out_6096205105773249120[0] = 0;
   out_6096205105773249120[1] = 0;
   out_6096205105773249120[2] = 0;
   out_6096205105773249120[3] = 0;
   out_6096205105773249120[4] = 0;
   out_6096205105773249120[5] = 0;
   out_6096205105773249120[6] = 0;
   out_6096205105773249120[7] = 0;
   out_6096205105773249120[8] = 0;
   out_6096205105773249120[9] = 0;
   out_6096205105773249120[10] = 1;
   out_6096205105773249120[11] = 0;
   out_6096205105773249120[12] = 0;
   out_6096205105773249120[13] = 0;
   out_6096205105773249120[14] = 0;
   out_6096205105773249120[15] = 0;
   out_6096205105773249120[16] = 0;
   out_6096205105773249120[17] = 0;
   out_6096205105773249120[18] = 0;
   out_6096205105773249120[19] = 0;
   out_6096205105773249120[20] = 0;
   out_6096205105773249120[21] = 0;
   out_6096205105773249120[22] = 0;
   out_6096205105773249120[23] = 0;
   out_6096205105773249120[24] = 0;
   out_6096205105773249120[25] = 0;
   out_6096205105773249120[26] = 0;
   out_6096205105773249120[27] = 0;
   out_6096205105773249120[28] = 0;
   out_6096205105773249120[29] = 0;
   out_6096205105773249120[30] = 0;
   out_6096205105773249120[31] = 0;
   out_6096205105773249120[32] = 0;
   out_6096205105773249120[33] = 1;
   out_6096205105773249120[34] = 0;
   out_6096205105773249120[35] = 0;
   out_6096205105773249120[36] = 0;
   out_6096205105773249120[37] = 0;
   out_6096205105773249120[38] = 0;
   out_6096205105773249120[39] = 0;
   out_6096205105773249120[40] = 0;
   out_6096205105773249120[41] = 0;
   out_6096205105773249120[42] = 0;
   out_6096205105773249120[43] = 0;
   out_6096205105773249120[44] = 0;
   out_6096205105773249120[45] = 0;
   out_6096205105773249120[46] = 0;
   out_6096205105773249120[47] = 0;
   out_6096205105773249120[48] = 0;
   out_6096205105773249120[49] = 0;
   out_6096205105773249120[50] = 0;
   out_6096205105773249120[51] = 0;
   out_6096205105773249120[52] = 0;
   out_6096205105773249120[53] = 0;
   out_6096205105773249120[54] = 0;
   out_6096205105773249120[55] = 0;
   out_6096205105773249120[56] = 1;
   out_6096205105773249120[57] = 0;
   out_6096205105773249120[58] = 0;
   out_6096205105773249120[59] = 0;
   out_6096205105773249120[60] = 0;
   out_6096205105773249120[61] = 0;
   out_6096205105773249120[62] = 0;
   out_6096205105773249120[63] = 0;
   out_6096205105773249120[64] = 0;
   out_6096205105773249120[65] = 0;
}
void h_10(double *state, double *unused, double *out_3043512482999151809) {
   out_3043512482999151809[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3043512482999151809[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3043512482999151809[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_7192958685017806166) {
   out_7192958685017806166[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_7192958685017806166[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7192958685017806166[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_7192958685017806166[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7192958685017806166[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7192958685017806166[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7192958685017806166[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7192958685017806166[7] = 0;
   out_7192958685017806166[8] = 0;
   out_7192958685017806166[9] = 0;
   out_7192958685017806166[10] = 0;
   out_7192958685017806166[11] = 0;
   out_7192958685017806166[12] = 0;
   out_7192958685017806166[13] = 0;
   out_7192958685017806166[14] = 0;
   out_7192958685017806166[15] = 0;
   out_7192958685017806166[16] = 1;
   out_7192958685017806166[17] = 0;
   out_7192958685017806166[18] = 0;
   out_7192958685017806166[19] = 1;
   out_7192958685017806166[20] = 0;
   out_7192958685017806166[21] = 0;
   out_7192958685017806166[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_7192958685017806166[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_7192958685017806166[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_7192958685017806166[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7192958685017806166[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7192958685017806166[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7192958685017806166[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7192958685017806166[29] = 0;
   out_7192958685017806166[30] = 0;
   out_7192958685017806166[31] = 0;
   out_7192958685017806166[32] = 0;
   out_7192958685017806166[33] = 0;
   out_7192958685017806166[34] = 0;
   out_7192958685017806166[35] = 0;
   out_7192958685017806166[36] = 0;
   out_7192958685017806166[37] = 0;
   out_7192958685017806166[38] = 0;
   out_7192958685017806166[39] = 1;
   out_7192958685017806166[40] = 0;
   out_7192958685017806166[41] = 0;
   out_7192958685017806166[42] = 1;
   out_7192958685017806166[43] = 0;
   out_7192958685017806166[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_7192958685017806166[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_7192958685017806166[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_7192958685017806166[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_7192958685017806166[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_7192958685017806166[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_7192958685017806166[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_7192958685017806166[51] = 0;
   out_7192958685017806166[52] = 0;
   out_7192958685017806166[53] = 0;
   out_7192958685017806166[54] = 0;
   out_7192958685017806166[55] = 0;
   out_7192958685017806166[56] = 0;
   out_7192958685017806166[57] = 0;
   out_7192958685017806166[58] = 0;
   out_7192958685017806166[59] = 0;
   out_7192958685017806166[60] = 0;
   out_7192958685017806166[61] = 0;
   out_7192958685017806166[62] = 1;
   out_7192958685017806166[63] = 0;
   out_7192958685017806166[64] = 0;
   out_7192958685017806166[65] = 1;
}
void h_12(double *state, double *unused, double *out_6151089362108428494) {
   out_6151089362108428494[0] = state[0];
   out_6151089362108428494[1] = state[1];
   out_6151089362108428494[2] = state[2];
}
void H_12(double *state, double *unused, double *out_1317938344370877970) {
   out_1317938344370877970[0] = 1;
   out_1317938344370877970[1] = 0;
   out_1317938344370877970[2] = 0;
   out_1317938344370877970[3] = 0;
   out_1317938344370877970[4] = 0;
   out_1317938344370877970[5] = 0;
   out_1317938344370877970[6] = 0;
   out_1317938344370877970[7] = 0;
   out_1317938344370877970[8] = 0;
   out_1317938344370877970[9] = 0;
   out_1317938344370877970[10] = 0;
   out_1317938344370877970[11] = 0;
   out_1317938344370877970[12] = 0;
   out_1317938344370877970[13] = 0;
   out_1317938344370877970[14] = 0;
   out_1317938344370877970[15] = 0;
   out_1317938344370877970[16] = 0;
   out_1317938344370877970[17] = 0;
   out_1317938344370877970[18] = 0;
   out_1317938344370877970[19] = 0;
   out_1317938344370877970[20] = 0;
   out_1317938344370877970[21] = 0;
   out_1317938344370877970[22] = 0;
   out_1317938344370877970[23] = 1;
   out_1317938344370877970[24] = 0;
   out_1317938344370877970[25] = 0;
   out_1317938344370877970[26] = 0;
   out_1317938344370877970[27] = 0;
   out_1317938344370877970[28] = 0;
   out_1317938344370877970[29] = 0;
   out_1317938344370877970[30] = 0;
   out_1317938344370877970[31] = 0;
   out_1317938344370877970[32] = 0;
   out_1317938344370877970[33] = 0;
   out_1317938344370877970[34] = 0;
   out_1317938344370877970[35] = 0;
   out_1317938344370877970[36] = 0;
   out_1317938344370877970[37] = 0;
   out_1317938344370877970[38] = 0;
   out_1317938344370877970[39] = 0;
   out_1317938344370877970[40] = 0;
   out_1317938344370877970[41] = 0;
   out_1317938344370877970[42] = 0;
   out_1317938344370877970[43] = 0;
   out_1317938344370877970[44] = 0;
   out_1317938344370877970[45] = 0;
   out_1317938344370877970[46] = 1;
   out_1317938344370877970[47] = 0;
   out_1317938344370877970[48] = 0;
   out_1317938344370877970[49] = 0;
   out_1317938344370877970[50] = 0;
   out_1317938344370877970[51] = 0;
   out_1317938344370877970[52] = 0;
   out_1317938344370877970[53] = 0;
   out_1317938344370877970[54] = 0;
   out_1317938344370877970[55] = 0;
   out_1317938344370877970[56] = 0;
   out_1317938344370877970[57] = 0;
   out_1317938344370877970[58] = 0;
   out_1317938344370877970[59] = 0;
   out_1317938344370877970[60] = 0;
   out_1317938344370877970[61] = 0;
   out_1317938344370877970[62] = 0;
   out_1317938344370877970[63] = 0;
   out_1317938344370877970[64] = 0;
   out_1317938344370877970[65] = 0;
}
void h_35(double *state, double *unused, double *out_1134950865722680502) {
   out_1134950865722680502[0] = state[7];
   out_1134950865722680502[1] = state[8];
   out_1134950865722680502[2] = state[9];
}
void H_35(double *state, double *unused, double *out_1427624687954135739) {
   out_1427624687954135739[0] = 0;
   out_1427624687954135739[1] = 0;
   out_1427624687954135739[2] = 0;
   out_1427624687954135739[3] = 0;
   out_1427624687954135739[4] = 0;
   out_1427624687954135739[5] = 0;
   out_1427624687954135739[6] = 0;
   out_1427624687954135739[7] = 1;
   out_1427624687954135739[8] = 0;
   out_1427624687954135739[9] = 0;
   out_1427624687954135739[10] = 0;
   out_1427624687954135739[11] = 0;
   out_1427624687954135739[12] = 0;
   out_1427624687954135739[13] = 0;
   out_1427624687954135739[14] = 0;
   out_1427624687954135739[15] = 0;
   out_1427624687954135739[16] = 0;
   out_1427624687954135739[17] = 0;
   out_1427624687954135739[18] = 0;
   out_1427624687954135739[19] = 0;
   out_1427624687954135739[20] = 0;
   out_1427624687954135739[21] = 0;
   out_1427624687954135739[22] = 0;
   out_1427624687954135739[23] = 0;
   out_1427624687954135739[24] = 0;
   out_1427624687954135739[25] = 0;
   out_1427624687954135739[26] = 0;
   out_1427624687954135739[27] = 0;
   out_1427624687954135739[28] = 0;
   out_1427624687954135739[29] = 0;
   out_1427624687954135739[30] = 1;
   out_1427624687954135739[31] = 0;
   out_1427624687954135739[32] = 0;
   out_1427624687954135739[33] = 0;
   out_1427624687954135739[34] = 0;
   out_1427624687954135739[35] = 0;
   out_1427624687954135739[36] = 0;
   out_1427624687954135739[37] = 0;
   out_1427624687954135739[38] = 0;
   out_1427624687954135739[39] = 0;
   out_1427624687954135739[40] = 0;
   out_1427624687954135739[41] = 0;
   out_1427624687954135739[42] = 0;
   out_1427624687954135739[43] = 0;
   out_1427624687954135739[44] = 0;
   out_1427624687954135739[45] = 0;
   out_1427624687954135739[46] = 0;
   out_1427624687954135739[47] = 0;
   out_1427624687954135739[48] = 0;
   out_1427624687954135739[49] = 0;
   out_1427624687954135739[50] = 0;
   out_1427624687954135739[51] = 0;
   out_1427624687954135739[52] = 0;
   out_1427624687954135739[53] = 1;
   out_1427624687954135739[54] = 0;
   out_1427624687954135739[55] = 0;
   out_1427624687954135739[56] = 0;
   out_1427624687954135739[57] = 0;
   out_1427624687954135739[58] = 0;
   out_1427624687954135739[59] = 0;
   out_1427624687954135739[60] = 0;
   out_1427624687954135739[61] = 0;
   out_1427624687954135739[62] = 0;
   out_1427624687954135739[63] = 0;
   out_1427624687954135739[64] = 0;
   out_1427624687954135739[65] = 0;
}
void h_32(double *state, double *unused, double *out_4721207292266360875) {
   out_4721207292266360875[0] = state[3];
   out_4721207292266360875[1] = state[4];
   out_4721207292266360875[2] = state[5];
   out_4721207292266360875[3] = state[6];
}
void H_32(double *state, double *unused, double *out_2913380087778971149) {
   out_2913380087778971149[0] = 0;
   out_2913380087778971149[1] = 0;
   out_2913380087778971149[2] = 0;
   out_2913380087778971149[3] = 1;
   out_2913380087778971149[4] = 0;
   out_2913380087778971149[5] = 0;
   out_2913380087778971149[6] = 0;
   out_2913380087778971149[7] = 0;
   out_2913380087778971149[8] = 0;
   out_2913380087778971149[9] = 0;
   out_2913380087778971149[10] = 0;
   out_2913380087778971149[11] = 0;
   out_2913380087778971149[12] = 0;
   out_2913380087778971149[13] = 0;
   out_2913380087778971149[14] = 0;
   out_2913380087778971149[15] = 0;
   out_2913380087778971149[16] = 0;
   out_2913380087778971149[17] = 0;
   out_2913380087778971149[18] = 0;
   out_2913380087778971149[19] = 0;
   out_2913380087778971149[20] = 0;
   out_2913380087778971149[21] = 0;
   out_2913380087778971149[22] = 0;
   out_2913380087778971149[23] = 0;
   out_2913380087778971149[24] = 0;
   out_2913380087778971149[25] = 0;
   out_2913380087778971149[26] = 1;
   out_2913380087778971149[27] = 0;
   out_2913380087778971149[28] = 0;
   out_2913380087778971149[29] = 0;
   out_2913380087778971149[30] = 0;
   out_2913380087778971149[31] = 0;
   out_2913380087778971149[32] = 0;
   out_2913380087778971149[33] = 0;
   out_2913380087778971149[34] = 0;
   out_2913380087778971149[35] = 0;
   out_2913380087778971149[36] = 0;
   out_2913380087778971149[37] = 0;
   out_2913380087778971149[38] = 0;
   out_2913380087778971149[39] = 0;
   out_2913380087778971149[40] = 0;
   out_2913380087778971149[41] = 0;
   out_2913380087778971149[42] = 0;
   out_2913380087778971149[43] = 0;
   out_2913380087778971149[44] = 0;
   out_2913380087778971149[45] = 0;
   out_2913380087778971149[46] = 0;
   out_2913380087778971149[47] = 0;
   out_2913380087778971149[48] = 0;
   out_2913380087778971149[49] = 1;
   out_2913380087778971149[50] = 0;
   out_2913380087778971149[51] = 0;
   out_2913380087778971149[52] = 0;
   out_2913380087778971149[53] = 0;
   out_2913380087778971149[54] = 0;
   out_2913380087778971149[55] = 0;
   out_2913380087778971149[56] = 0;
   out_2913380087778971149[57] = 0;
   out_2913380087778971149[58] = 0;
   out_2913380087778971149[59] = 0;
   out_2913380087778971149[60] = 0;
   out_2913380087778971149[61] = 0;
   out_2913380087778971149[62] = 0;
   out_2913380087778971149[63] = 0;
   out_2913380087778971149[64] = 0;
   out_2913380087778971149[65] = 0;
   out_2913380087778971149[66] = 0;
   out_2913380087778971149[67] = 0;
   out_2913380087778971149[68] = 0;
   out_2913380087778971149[69] = 0;
   out_2913380087778971149[70] = 0;
   out_2913380087778971149[71] = 0;
   out_2913380087778971149[72] = 1;
   out_2913380087778971149[73] = 0;
   out_2913380087778971149[74] = 0;
   out_2913380087778971149[75] = 0;
   out_2913380087778971149[76] = 0;
   out_2913380087778971149[77] = 0;
   out_2913380087778971149[78] = 0;
   out_2913380087778971149[79] = 0;
   out_2913380087778971149[80] = 0;
   out_2913380087778971149[81] = 0;
   out_2913380087778971149[82] = 0;
   out_2913380087778971149[83] = 0;
   out_2913380087778971149[84] = 0;
   out_2913380087778971149[85] = 0;
   out_2913380087778971149[86] = 0;
   out_2913380087778971149[87] = 0;
}
void h_13(double *state, double *unused, double *out_364134050257467252) {
   out_364134050257467252[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_364134050257467252[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_364134050257467252[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_5486592313647626777) {
   out_5486592313647626777[0] = 0;
   out_5486592313647626777[1] = 0;
   out_5486592313647626777[2] = 0;
   out_5486592313647626777[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5486592313647626777[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5486592313647626777[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_5486592313647626777[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5486592313647626777[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_5486592313647626777[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_5486592313647626777[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_5486592313647626777[10] = 0;
   out_5486592313647626777[11] = 0;
   out_5486592313647626777[12] = 0;
   out_5486592313647626777[13] = 0;
   out_5486592313647626777[14] = 0;
   out_5486592313647626777[15] = 0;
   out_5486592313647626777[16] = 0;
   out_5486592313647626777[17] = 0;
   out_5486592313647626777[18] = 0;
   out_5486592313647626777[19] = 0;
   out_5486592313647626777[20] = 0;
   out_5486592313647626777[21] = 0;
   out_5486592313647626777[22] = 0;
   out_5486592313647626777[23] = 0;
   out_5486592313647626777[24] = 0;
   out_5486592313647626777[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_5486592313647626777[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5486592313647626777[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5486592313647626777[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_5486592313647626777[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_5486592313647626777[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_5486592313647626777[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_5486592313647626777[32] = 0;
   out_5486592313647626777[33] = 0;
   out_5486592313647626777[34] = 0;
   out_5486592313647626777[35] = 0;
   out_5486592313647626777[36] = 0;
   out_5486592313647626777[37] = 0;
   out_5486592313647626777[38] = 0;
   out_5486592313647626777[39] = 0;
   out_5486592313647626777[40] = 0;
   out_5486592313647626777[41] = 0;
   out_5486592313647626777[42] = 0;
   out_5486592313647626777[43] = 0;
   out_5486592313647626777[44] = 0;
   out_5486592313647626777[45] = 0;
   out_5486592313647626777[46] = 0;
   out_5486592313647626777[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_5486592313647626777[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_5486592313647626777[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_5486592313647626777[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_5486592313647626777[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_5486592313647626777[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_5486592313647626777[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_5486592313647626777[54] = 0;
   out_5486592313647626777[55] = 0;
   out_5486592313647626777[56] = 0;
   out_5486592313647626777[57] = 0;
   out_5486592313647626777[58] = 0;
   out_5486592313647626777[59] = 0;
   out_5486592313647626777[60] = 0;
   out_5486592313647626777[61] = 0;
   out_5486592313647626777[62] = 0;
   out_5486592313647626777[63] = 0;
   out_5486592313647626777[64] = 0;
   out_5486592313647626777[65] = 0;
}
void h_14(double *state, double *unused, double *out_6592276556226636800) {
   out_6592276556226636800[0] = state[10];
   out_6592276556226636800[1] = state[11];
   out_6592276556226636800[2] = state[12];
}
void H_14(double *state, double *unused, double *out_6096205105773249120) {
   out_6096205105773249120[0] = 0;
   out_6096205105773249120[1] = 0;
   out_6096205105773249120[2] = 0;
   out_6096205105773249120[3] = 0;
   out_6096205105773249120[4] = 0;
   out_6096205105773249120[5] = 0;
   out_6096205105773249120[6] = 0;
   out_6096205105773249120[7] = 0;
   out_6096205105773249120[8] = 0;
   out_6096205105773249120[9] = 0;
   out_6096205105773249120[10] = 1;
   out_6096205105773249120[11] = 0;
   out_6096205105773249120[12] = 0;
   out_6096205105773249120[13] = 0;
   out_6096205105773249120[14] = 0;
   out_6096205105773249120[15] = 0;
   out_6096205105773249120[16] = 0;
   out_6096205105773249120[17] = 0;
   out_6096205105773249120[18] = 0;
   out_6096205105773249120[19] = 0;
   out_6096205105773249120[20] = 0;
   out_6096205105773249120[21] = 0;
   out_6096205105773249120[22] = 0;
   out_6096205105773249120[23] = 0;
   out_6096205105773249120[24] = 0;
   out_6096205105773249120[25] = 0;
   out_6096205105773249120[26] = 0;
   out_6096205105773249120[27] = 0;
   out_6096205105773249120[28] = 0;
   out_6096205105773249120[29] = 0;
   out_6096205105773249120[30] = 0;
   out_6096205105773249120[31] = 0;
   out_6096205105773249120[32] = 0;
   out_6096205105773249120[33] = 1;
   out_6096205105773249120[34] = 0;
   out_6096205105773249120[35] = 0;
   out_6096205105773249120[36] = 0;
   out_6096205105773249120[37] = 0;
   out_6096205105773249120[38] = 0;
   out_6096205105773249120[39] = 0;
   out_6096205105773249120[40] = 0;
   out_6096205105773249120[41] = 0;
   out_6096205105773249120[42] = 0;
   out_6096205105773249120[43] = 0;
   out_6096205105773249120[44] = 0;
   out_6096205105773249120[45] = 0;
   out_6096205105773249120[46] = 0;
   out_6096205105773249120[47] = 0;
   out_6096205105773249120[48] = 0;
   out_6096205105773249120[49] = 0;
   out_6096205105773249120[50] = 0;
   out_6096205105773249120[51] = 0;
   out_6096205105773249120[52] = 0;
   out_6096205105773249120[53] = 0;
   out_6096205105773249120[54] = 0;
   out_6096205105773249120[55] = 0;
   out_6096205105773249120[56] = 1;
   out_6096205105773249120[57] = 0;
   out_6096205105773249120[58] = 0;
   out_6096205105773249120[59] = 0;
   out_6096205105773249120[60] = 0;
   out_6096205105773249120[61] = 0;
   out_6096205105773249120[62] = 0;
   out_6096205105773249120[63] = 0;
   out_6096205105773249120[64] = 0;
   out_6096205105773249120[65] = 0;
}
void h_33(double *state, double *unused, double *out_3737322617129334857) {
   out_3737322617129334857[0] = state[16];
   out_3737322617129334857[1] = state[17];
   out_3737322617129334857[2] = state[18];
}
void H_33(double *state, double *unused, double *out_4578181692592993343) {
   out_4578181692592993343[0] = 0;
   out_4578181692592993343[1] = 0;
   out_4578181692592993343[2] = 0;
   out_4578181692592993343[3] = 0;
   out_4578181692592993343[4] = 0;
   out_4578181692592993343[5] = 0;
   out_4578181692592993343[6] = 0;
   out_4578181692592993343[7] = 0;
   out_4578181692592993343[8] = 0;
   out_4578181692592993343[9] = 0;
   out_4578181692592993343[10] = 0;
   out_4578181692592993343[11] = 0;
   out_4578181692592993343[12] = 0;
   out_4578181692592993343[13] = 0;
   out_4578181692592993343[14] = 0;
   out_4578181692592993343[15] = 0;
   out_4578181692592993343[16] = 1;
   out_4578181692592993343[17] = 0;
   out_4578181692592993343[18] = 0;
   out_4578181692592993343[19] = 0;
   out_4578181692592993343[20] = 0;
   out_4578181692592993343[21] = 0;
   out_4578181692592993343[22] = 0;
   out_4578181692592993343[23] = 0;
   out_4578181692592993343[24] = 0;
   out_4578181692592993343[25] = 0;
   out_4578181692592993343[26] = 0;
   out_4578181692592993343[27] = 0;
   out_4578181692592993343[28] = 0;
   out_4578181692592993343[29] = 0;
   out_4578181692592993343[30] = 0;
   out_4578181692592993343[31] = 0;
   out_4578181692592993343[32] = 0;
   out_4578181692592993343[33] = 0;
   out_4578181692592993343[34] = 0;
   out_4578181692592993343[35] = 0;
   out_4578181692592993343[36] = 0;
   out_4578181692592993343[37] = 0;
   out_4578181692592993343[38] = 0;
   out_4578181692592993343[39] = 1;
   out_4578181692592993343[40] = 0;
   out_4578181692592993343[41] = 0;
   out_4578181692592993343[42] = 0;
   out_4578181692592993343[43] = 0;
   out_4578181692592993343[44] = 0;
   out_4578181692592993343[45] = 0;
   out_4578181692592993343[46] = 0;
   out_4578181692592993343[47] = 0;
   out_4578181692592993343[48] = 0;
   out_4578181692592993343[49] = 0;
   out_4578181692592993343[50] = 0;
   out_4578181692592993343[51] = 0;
   out_4578181692592993343[52] = 0;
   out_4578181692592993343[53] = 0;
   out_4578181692592993343[54] = 0;
   out_4578181692592993343[55] = 0;
   out_4578181692592993343[56] = 0;
   out_4578181692592993343[57] = 0;
   out_4578181692592993343[58] = 0;
   out_4578181692592993343[59] = 0;
   out_4578181692592993343[60] = 0;
   out_4578181692592993343[61] = 0;
   out_4578181692592993343[62] = 1;
   out_4578181692592993343[63] = 0;
   out_4578181692592993343[64] = 0;
   out_4578181692592993343[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_7959907782308194627) {
  H(in_vec, out_7959907782308194627);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_6929774310989775988) {
  err_fun(nom_x, delta_x, out_6929774310989775988);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_6193789776824585571) {
  inv_err_fun(nom_x, true_x, out_6193789776824585571);
}
void live_H_mod_fun(double *state, double *out_8547509152961498922) {
  H_mod_fun(state, out_8547509152961498922);
}
void live_f_fun(double *state, double dt, double *out_8100393315288221642) {
  f_fun(state,  dt, out_8100393315288221642);
}
void live_F_fun(double *state, double dt, double *out_7769089323050102648) {
  F_fun(state,  dt, out_7769089323050102648);
}
void live_h_4(double *state, double *unused, double *out_6579737165675804813) {
  h_4(state, unused, out_6579737165675804813);
}
void live_H_4(double *state, double *unused, double *out_8985066658053328462) {
  H_4(state, unused, out_8985066658053328462);
}
void live_h_9(double *state, double *unused, double *out_6592276556226636800) {
  h_9(state, unused, out_6592276556226636800);
}
void live_H_9(double *state, double *unused, double *out_6096205105773249120) {
  H_9(state, unused, out_6096205105773249120);
}
void live_h_10(double *state, double *unused, double *out_3043512482999151809) {
  h_10(state, unused, out_3043512482999151809);
}
void live_H_10(double *state, double *unused, double *out_7192958685017806166) {
  H_10(state, unused, out_7192958685017806166);
}
void live_h_12(double *state, double *unused, double *out_6151089362108428494) {
  h_12(state, unused, out_6151089362108428494);
}
void live_H_12(double *state, double *unused, double *out_1317938344370877970) {
  H_12(state, unused, out_1317938344370877970);
}
void live_h_35(double *state, double *unused, double *out_1134950865722680502) {
  h_35(state, unused, out_1134950865722680502);
}
void live_H_35(double *state, double *unused, double *out_1427624687954135739) {
  H_35(state, unused, out_1427624687954135739);
}
void live_h_32(double *state, double *unused, double *out_4721207292266360875) {
  h_32(state, unused, out_4721207292266360875);
}
void live_H_32(double *state, double *unused, double *out_2913380087778971149) {
  H_32(state, unused, out_2913380087778971149);
}
void live_h_13(double *state, double *unused, double *out_364134050257467252) {
  h_13(state, unused, out_364134050257467252);
}
void live_H_13(double *state, double *unused, double *out_5486592313647626777) {
  H_13(state, unused, out_5486592313647626777);
}
void live_h_14(double *state, double *unused, double *out_6592276556226636800) {
  h_14(state, unused, out_6592276556226636800);
}
void live_H_14(double *state, double *unused, double *out_6096205105773249120) {
  H_14(state, unused, out_6096205105773249120);
}
void live_h_33(double *state, double *unused, double *out_3737322617129334857) {
  h_33(state, unused, out_3737322617129334857);
}
void live_H_33(double *state, double *unused, double *out_4578181692592993343) {
  H_33(state, unused, out_4578181692592993343);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
