#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_907497564161450989) {
   out_907497564161450989[0] = 0;
   out_907497564161450989[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_907497564161450989[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_907497564161450989[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_907497564161450989[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_907497564161450989[5] = -sin(in_vec[1]);
   out_907497564161450989[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_907497564161450989[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_907497564161450989[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_907497564161450989[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_907497564161450989[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_907497564161450989[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_907497564161450989[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_907497564161450989[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_907497564161450989[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_907497564161450989[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_907497564161450989[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_907497564161450989[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_403017012035771763) {
   out_403017012035771763[0] = delta_x[0] + nom_x[0];
   out_403017012035771763[1] = delta_x[1] + nom_x[1];
   out_403017012035771763[2] = delta_x[2] + nom_x[2];
   out_403017012035771763[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_403017012035771763[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_403017012035771763[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_403017012035771763[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_403017012035771763[7] = delta_x[6] + nom_x[7];
   out_403017012035771763[8] = delta_x[7] + nom_x[8];
   out_403017012035771763[9] = delta_x[8] + nom_x[9];
   out_403017012035771763[10] = delta_x[9] + nom_x[10];
   out_403017012035771763[11] = delta_x[10] + nom_x[11];
   out_403017012035771763[12] = delta_x[11] + nom_x[12];
   out_403017012035771763[13] = delta_x[12] + nom_x[13];
   out_403017012035771763[14] = delta_x[13] + nom_x[14];
   out_403017012035771763[15] = delta_x[14] + nom_x[15];
   out_403017012035771763[16] = delta_x[15] + nom_x[16];
   out_403017012035771763[17] = delta_x[16] + nom_x[17];
   out_403017012035771763[18] = delta_x[17] + nom_x[18];
   out_403017012035771763[19] = delta_x[18] + nom_x[19];
   out_403017012035771763[20] = delta_x[19] + nom_x[20];
   out_403017012035771763[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2932713747370631150) {
   out_2932713747370631150[0] = -nom_x[0] + true_x[0];
   out_2932713747370631150[1] = -nom_x[1] + true_x[1];
   out_2932713747370631150[2] = -nom_x[2] + true_x[2];
   out_2932713747370631150[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2932713747370631150[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2932713747370631150[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2932713747370631150[6] = -nom_x[7] + true_x[7];
   out_2932713747370631150[7] = -nom_x[8] + true_x[8];
   out_2932713747370631150[8] = -nom_x[9] + true_x[9];
   out_2932713747370631150[9] = -nom_x[10] + true_x[10];
   out_2932713747370631150[10] = -nom_x[11] + true_x[11];
   out_2932713747370631150[11] = -nom_x[12] + true_x[12];
   out_2932713747370631150[12] = -nom_x[13] + true_x[13];
   out_2932713747370631150[13] = -nom_x[14] + true_x[14];
   out_2932713747370631150[14] = -nom_x[15] + true_x[15];
   out_2932713747370631150[15] = -nom_x[16] + true_x[16];
   out_2932713747370631150[16] = -nom_x[17] + true_x[17];
   out_2932713747370631150[17] = -nom_x[18] + true_x[18];
   out_2932713747370631150[18] = -nom_x[19] + true_x[19];
   out_2932713747370631150[19] = -nom_x[20] + true_x[20];
   out_2932713747370631150[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6036032580712144890) {
   out_6036032580712144890[0] = 1.0;
   out_6036032580712144890[1] = 0;
   out_6036032580712144890[2] = 0;
   out_6036032580712144890[3] = 0;
   out_6036032580712144890[4] = 0;
   out_6036032580712144890[5] = 0;
   out_6036032580712144890[6] = 0;
   out_6036032580712144890[7] = 0;
   out_6036032580712144890[8] = 0;
   out_6036032580712144890[9] = 0;
   out_6036032580712144890[10] = 0;
   out_6036032580712144890[11] = 0;
   out_6036032580712144890[12] = 0;
   out_6036032580712144890[13] = 0;
   out_6036032580712144890[14] = 0;
   out_6036032580712144890[15] = 0;
   out_6036032580712144890[16] = 0;
   out_6036032580712144890[17] = 0;
   out_6036032580712144890[18] = 0;
   out_6036032580712144890[19] = 0;
   out_6036032580712144890[20] = 0;
   out_6036032580712144890[21] = 0;
   out_6036032580712144890[22] = 1.0;
   out_6036032580712144890[23] = 0;
   out_6036032580712144890[24] = 0;
   out_6036032580712144890[25] = 0;
   out_6036032580712144890[26] = 0;
   out_6036032580712144890[27] = 0;
   out_6036032580712144890[28] = 0;
   out_6036032580712144890[29] = 0;
   out_6036032580712144890[30] = 0;
   out_6036032580712144890[31] = 0;
   out_6036032580712144890[32] = 0;
   out_6036032580712144890[33] = 0;
   out_6036032580712144890[34] = 0;
   out_6036032580712144890[35] = 0;
   out_6036032580712144890[36] = 0;
   out_6036032580712144890[37] = 0;
   out_6036032580712144890[38] = 0;
   out_6036032580712144890[39] = 0;
   out_6036032580712144890[40] = 0;
   out_6036032580712144890[41] = 0;
   out_6036032580712144890[42] = 0;
   out_6036032580712144890[43] = 0;
   out_6036032580712144890[44] = 1.0;
   out_6036032580712144890[45] = 0;
   out_6036032580712144890[46] = 0;
   out_6036032580712144890[47] = 0;
   out_6036032580712144890[48] = 0;
   out_6036032580712144890[49] = 0;
   out_6036032580712144890[50] = 0;
   out_6036032580712144890[51] = 0;
   out_6036032580712144890[52] = 0;
   out_6036032580712144890[53] = 0;
   out_6036032580712144890[54] = 0;
   out_6036032580712144890[55] = 0;
   out_6036032580712144890[56] = 0;
   out_6036032580712144890[57] = 0;
   out_6036032580712144890[58] = 0;
   out_6036032580712144890[59] = 0;
   out_6036032580712144890[60] = 0;
   out_6036032580712144890[61] = 0;
   out_6036032580712144890[62] = 0;
   out_6036032580712144890[63] = 0;
   out_6036032580712144890[64] = 0;
   out_6036032580712144890[65] = 0;
   out_6036032580712144890[66] = -0.5*state[4];
   out_6036032580712144890[67] = -0.5*state[5];
   out_6036032580712144890[68] = -0.5*state[6];
   out_6036032580712144890[69] = 0;
   out_6036032580712144890[70] = 0;
   out_6036032580712144890[71] = 0;
   out_6036032580712144890[72] = 0;
   out_6036032580712144890[73] = 0;
   out_6036032580712144890[74] = 0;
   out_6036032580712144890[75] = 0;
   out_6036032580712144890[76] = 0;
   out_6036032580712144890[77] = 0;
   out_6036032580712144890[78] = 0;
   out_6036032580712144890[79] = 0;
   out_6036032580712144890[80] = 0;
   out_6036032580712144890[81] = 0;
   out_6036032580712144890[82] = 0;
   out_6036032580712144890[83] = 0;
   out_6036032580712144890[84] = 0;
   out_6036032580712144890[85] = 0;
   out_6036032580712144890[86] = 0;
   out_6036032580712144890[87] = 0.5*state[3];
   out_6036032580712144890[88] = 0.5*state[6];
   out_6036032580712144890[89] = -0.5*state[5];
   out_6036032580712144890[90] = 0;
   out_6036032580712144890[91] = 0;
   out_6036032580712144890[92] = 0;
   out_6036032580712144890[93] = 0;
   out_6036032580712144890[94] = 0;
   out_6036032580712144890[95] = 0;
   out_6036032580712144890[96] = 0;
   out_6036032580712144890[97] = 0;
   out_6036032580712144890[98] = 0;
   out_6036032580712144890[99] = 0;
   out_6036032580712144890[100] = 0;
   out_6036032580712144890[101] = 0;
   out_6036032580712144890[102] = 0;
   out_6036032580712144890[103] = 0;
   out_6036032580712144890[104] = 0;
   out_6036032580712144890[105] = 0;
   out_6036032580712144890[106] = 0;
   out_6036032580712144890[107] = 0;
   out_6036032580712144890[108] = -0.5*state[6];
   out_6036032580712144890[109] = 0.5*state[3];
   out_6036032580712144890[110] = 0.5*state[4];
   out_6036032580712144890[111] = 0;
   out_6036032580712144890[112] = 0;
   out_6036032580712144890[113] = 0;
   out_6036032580712144890[114] = 0;
   out_6036032580712144890[115] = 0;
   out_6036032580712144890[116] = 0;
   out_6036032580712144890[117] = 0;
   out_6036032580712144890[118] = 0;
   out_6036032580712144890[119] = 0;
   out_6036032580712144890[120] = 0;
   out_6036032580712144890[121] = 0;
   out_6036032580712144890[122] = 0;
   out_6036032580712144890[123] = 0;
   out_6036032580712144890[124] = 0;
   out_6036032580712144890[125] = 0;
   out_6036032580712144890[126] = 0;
   out_6036032580712144890[127] = 0;
   out_6036032580712144890[128] = 0;
   out_6036032580712144890[129] = 0.5*state[5];
   out_6036032580712144890[130] = -0.5*state[4];
   out_6036032580712144890[131] = 0.5*state[3];
   out_6036032580712144890[132] = 0;
   out_6036032580712144890[133] = 0;
   out_6036032580712144890[134] = 0;
   out_6036032580712144890[135] = 0;
   out_6036032580712144890[136] = 0;
   out_6036032580712144890[137] = 0;
   out_6036032580712144890[138] = 0;
   out_6036032580712144890[139] = 0;
   out_6036032580712144890[140] = 0;
   out_6036032580712144890[141] = 0;
   out_6036032580712144890[142] = 0;
   out_6036032580712144890[143] = 0;
   out_6036032580712144890[144] = 0;
   out_6036032580712144890[145] = 0;
   out_6036032580712144890[146] = 0;
   out_6036032580712144890[147] = 0;
   out_6036032580712144890[148] = 0;
   out_6036032580712144890[149] = 0;
   out_6036032580712144890[150] = 0;
   out_6036032580712144890[151] = 0;
   out_6036032580712144890[152] = 0;
   out_6036032580712144890[153] = 1.0;
   out_6036032580712144890[154] = 0;
   out_6036032580712144890[155] = 0;
   out_6036032580712144890[156] = 0;
   out_6036032580712144890[157] = 0;
   out_6036032580712144890[158] = 0;
   out_6036032580712144890[159] = 0;
   out_6036032580712144890[160] = 0;
   out_6036032580712144890[161] = 0;
   out_6036032580712144890[162] = 0;
   out_6036032580712144890[163] = 0;
   out_6036032580712144890[164] = 0;
   out_6036032580712144890[165] = 0;
   out_6036032580712144890[166] = 0;
   out_6036032580712144890[167] = 0;
   out_6036032580712144890[168] = 0;
   out_6036032580712144890[169] = 0;
   out_6036032580712144890[170] = 0;
   out_6036032580712144890[171] = 0;
   out_6036032580712144890[172] = 0;
   out_6036032580712144890[173] = 0;
   out_6036032580712144890[174] = 0;
   out_6036032580712144890[175] = 1.0;
   out_6036032580712144890[176] = 0;
   out_6036032580712144890[177] = 0;
   out_6036032580712144890[178] = 0;
   out_6036032580712144890[179] = 0;
   out_6036032580712144890[180] = 0;
   out_6036032580712144890[181] = 0;
   out_6036032580712144890[182] = 0;
   out_6036032580712144890[183] = 0;
   out_6036032580712144890[184] = 0;
   out_6036032580712144890[185] = 0;
   out_6036032580712144890[186] = 0;
   out_6036032580712144890[187] = 0;
   out_6036032580712144890[188] = 0;
   out_6036032580712144890[189] = 0;
   out_6036032580712144890[190] = 0;
   out_6036032580712144890[191] = 0;
   out_6036032580712144890[192] = 0;
   out_6036032580712144890[193] = 0;
   out_6036032580712144890[194] = 0;
   out_6036032580712144890[195] = 0;
   out_6036032580712144890[196] = 0;
   out_6036032580712144890[197] = 1.0;
   out_6036032580712144890[198] = 0;
   out_6036032580712144890[199] = 0;
   out_6036032580712144890[200] = 0;
   out_6036032580712144890[201] = 0;
   out_6036032580712144890[202] = 0;
   out_6036032580712144890[203] = 0;
   out_6036032580712144890[204] = 0;
   out_6036032580712144890[205] = 0;
   out_6036032580712144890[206] = 0;
   out_6036032580712144890[207] = 0;
   out_6036032580712144890[208] = 0;
   out_6036032580712144890[209] = 0;
   out_6036032580712144890[210] = 0;
   out_6036032580712144890[211] = 0;
   out_6036032580712144890[212] = 0;
   out_6036032580712144890[213] = 0;
   out_6036032580712144890[214] = 0;
   out_6036032580712144890[215] = 0;
   out_6036032580712144890[216] = 0;
   out_6036032580712144890[217] = 0;
   out_6036032580712144890[218] = 0;
   out_6036032580712144890[219] = 1.0;
   out_6036032580712144890[220] = 0;
   out_6036032580712144890[221] = 0;
   out_6036032580712144890[222] = 0;
   out_6036032580712144890[223] = 0;
   out_6036032580712144890[224] = 0;
   out_6036032580712144890[225] = 0;
   out_6036032580712144890[226] = 0;
   out_6036032580712144890[227] = 0;
   out_6036032580712144890[228] = 0;
   out_6036032580712144890[229] = 0;
   out_6036032580712144890[230] = 0;
   out_6036032580712144890[231] = 0;
   out_6036032580712144890[232] = 0;
   out_6036032580712144890[233] = 0;
   out_6036032580712144890[234] = 0;
   out_6036032580712144890[235] = 0;
   out_6036032580712144890[236] = 0;
   out_6036032580712144890[237] = 0;
   out_6036032580712144890[238] = 0;
   out_6036032580712144890[239] = 0;
   out_6036032580712144890[240] = 0;
   out_6036032580712144890[241] = 1.0;
   out_6036032580712144890[242] = 0;
   out_6036032580712144890[243] = 0;
   out_6036032580712144890[244] = 0;
   out_6036032580712144890[245] = 0;
   out_6036032580712144890[246] = 0;
   out_6036032580712144890[247] = 0;
   out_6036032580712144890[248] = 0;
   out_6036032580712144890[249] = 0;
   out_6036032580712144890[250] = 0;
   out_6036032580712144890[251] = 0;
   out_6036032580712144890[252] = 0;
   out_6036032580712144890[253] = 0;
   out_6036032580712144890[254] = 0;
   out_6036032580712144890[255] = 0;
   out_6036032580712144890[256] = 0;
   out_6036032580712144890[257] = 0;
   out_6036032580712144890[258] = 0;
   out_6036032580712144890[259] = 0;
   out_6036032580712144890[260] = 0;
   out_6036032580712144890[261] = 0;
   out_6036032580712144890[262] = 0;
   out_6036032580712144890[263] = 1.0;
   out_6036032580712144890[264] = 0;
   out_6036032580712144890[265] = 0;
   out_6036032580712144890[266] = 0;
   out_6036032580712144890[267] = 0;
   out_6036032580712144890[268] = 0;
   out_6036032580712144890[269] = 0;
   out_6036032580712144890[270] = 0;
   out_6036032580712144890[271] = 0;
   out_6036032580712144890[272] = 0;
   out_6036032580712144890[273] = 0;
   out_6036032580712144890[274] = 0;
   out_6036032580712144890[275] = 0;
   out_6036032580712144890[276] = 0;
   out_6036032580712144890[277] = 0;
   out_6036032580712144890[278] = 0;
   out_6036032580712144890[279] = 0;
   out_6036032580712144890[280] = 0;
   out_6036032580712144890[281] = 0;
   out_6036032580712144890[282] = 0;
   out_6036032580712144890[283] = 0;
   out_6036032580712144890[284] = 0;
   out_6036032580712144890[285] = 1.0;
   out_6036032580712144890[286] = 0;
   out_6036032580712144890[287] = 0;
   out_6036032580712144890[288] = 0;
   out_6036032580712144890[289] = 0;
   out_6036032580712144890[290] = 0;
   out_6036032580712144890[291] = 0;
   out_6036032580712144890[292] = 0;
   out_6036032580712144890[293] = 0;
   out_6036032580712144890[294] = 0;
   out_6036032580712144890[295] = 0;
   out_6036032580712144890[296] = 0;
   out_6036032580712144890[297] = 0;
   out_6036032580712144890[298] = 0;
   out_6036032580712144890[299] = 0;
   out_6036032580712144890[300] = 0;
   out_6036032580712144890[301] = 0;
   out_6036032580712144890[302] = 0;
   out_6036032580712144890[303] = 0;
   out_6036032580712144890[304] = 0;
   out_6036032580712144890[305] = 0;
   out_6036032580712144890[306] = 0;
   out_6036032580712144890[307] = 1.0;
   out_6036032580712144890[308] = 0;
   out_6036032580712144890[309] = 0;
   out_6036032580712144890[310] = 0;
   out_6036032580712144890[311] = 0;
   out_6036032580712144890[312] = 0;
   out_6036032580712144890[313] = 0;
   out_6036032580712144890[314] = 0;
   out_6036032580712144890[315] = 0;
   out_6036032580712144890[316] = 0;
   out_6036032580712144890[317] = 0;
   out_6036032580712144890[318] = 0;
   out_6036032580712144890[319] = 0;
   out_6036032580712144890[320] = 0;
   out_6036032580712144890[321] = 0;
   out_6036032580712144890[322] = 0;
   out_6036032580712144890[323] = 0;
   out_6036032580712144890[324] = 0;
   out_6036032580712144890[325] = 0;
   out_6036032580712144890[326] = 0;
   out_6036032580712144890[327] = 0;
   out_6036032580712144890[328] = 0;
   out_6036032580712144890[329] = 1.0;
   out_6036032580712144890[330] = 0;
   out_6036032580712144890[331] = 0;
   out_6036032580712144890[332] = 0;
   out_6036032580712144890[333] = 0;
   out_6036032580712144890[334] = 0;
   out_6036032580712144890[335] = 0;
   out_6036032580712144890[336] = 0;
   out_6036032580712144890[337] = 0;
   out_6036032580712144890[338] = 0;
   out_6036032580712144890[339] = 0;
   out_6036032580712144890[340] = 0;
   out_6036032580712144890[341] = 0;
   out_6036032580712144890[342] = 0;
   out_6036032580712144890[343] = 0;
   out_6036032580712144890[344] = 0;
   out_6036032580712144890[345] = 0;
   out_6036032580712144890[346] = 0;
   out_6036032580712144890[347] = 0;
   out_6036032580712144890[348] = 0;
   out_6036032580712144890[349] = 0;
   out_6036032580712144890[350] = 0;
   out_6036032580712144890[351] = 1.0;
   out_6036032580712144890[352] = 0;
   out_6036032580712144890[353] = 0;
   out_6036032580712144890[354] = 0;
   out_6036032580712144890[355] = 0;
   out_6036032580712144890[356] = 0;
   out_6036032580712144890[357] = 0;
   out_6036032580712144890[358] = 0;
   out_6036032580712144890[359] = 0;
   out_6036032580712144890[360] = 0;
   out_6036032580712144890[361] = 0;
   out_6036032580712144890[362] = 0;
   out_6036032580712144890[363] = 0;
   out_6036032580712144890[364] = 0;
   out_6036032580712144890[365] = 0;
   out_6036032580712144890[366] = 0;
   out_6036032580712144890[367] = 0;
   out_6036032580712144890[368] = 0;
   out_6036032580712144890[369] = 0;
   out_6036032580712144890[370] = 0;
   out_6036032580712144890[371] = 0;
   out_6036032580712144890[372] = 0;
   out_6036032580712144890[373] = 1.0;
   out_6036032580712144890[374] = 0;
   out_6036032580712144890[375] = 0;
   out_6036032580712144890[376] = 0;
   out_6036032580712144890[377] = 0;
   out_6036032580712144890[378] = 0;
   out_6036032580712144890[379] = 0;
   out_6036032580712144890[380] = 0;
   out_6036032580712144890[381] = 0;
   out_6036032580712144890[382] = 0;
   out_6036032580712144890[383] = 0;
   out_6036032580712144890[384] = 0;
   out_6036032580712144890[385] = 0;
   out_6036032580712144890[386] = 0;
   out_6036032580712144890[387] = 0;
   out_6036032580712144890[388] = 0;
   out_6036032580712144890[389] = 0;
   out_6036032580712144890[390] = 0;
   out_6036032580712144890[391] = 0;
   out_6036032580712144890[392] = 0;
   out_6036032580712144890[393] = 0;
   out_6036032580712144890[394] = 0;
   out_6036032580712144890[395] = 1.0;
   out_6036032580712144890[396] = 0;
   out_6036032580712144890[397] = 0;
   out_6036032580712144890[398] = 0;
   out_6036032580712144890[399] = 0;
   out_6036032580712144890[400] = 0;
   out_6036032580712144890[401] = 0;
   out_6036032580712144890[402] = 0;
   out_6036032580712144890[403] = 0;
   out_6036032580712144890[404] = 0;
   out_6036032580712144890[405] = 0;
   out_6036032580712144890[406] = 0;
   out_6036032580712144890[407] = 0;
   out_6036032580712144890[408] = 0;
   out_6036032580712144890[409] = 0;
   out_6036032580712144890[410] = 0;
   out_6036032580712144890[411] = 0;
   out_6036032580712144890[412] = 0;
   out_6036032580712144890[413] = 0;
   out_6036032580712144890[414] = 0;
   out_6036032580712144890[415] = 0;
   out_6036032580712144890[416] = 0;
   out_6036032580712144890[417] = 1.0;
   out_6036032580712144890[418] = 0;
   out_6036032580712144890[419] = 0;
   out_6036032580712144890[420] = 0;
   out_6036032580712144890[421] = 0;
   out_6036032580712144890[422] = 0;
   out_6036032580712144890[423] = 0;
   out_6036032580712144890[424] = 0;
   out_6036032580712144890[425] = 0;
   out_6036032580712144890[426] = 0;
   out_6036032580712144890[427] = 0;
   out_6036032580712144890[428] = 0;
   out_6036032580712144890[429] = 0;
   out_6036032580712144890[430] = 0;
   out_6036032580712144890[431] = 0;
   out_6036032580712144890[432] = 0;
   out_6036032580712144890[433] = 0;
   out_6036032580712144890[434] = 0;
   out_6036032580712144890[435] = 0;
   out_6036032580712144890[436] = 0;
   out_6036032580712144890[437] = 0;
   out_6036032580712144890[438] = 0;
   out_6036032580712144890[439] = 1.0;
   out_6036032580712144890[440] = 0;
   out_6036032580712144890[441] = 0;
   out_6036032580712144890[442] = 0;
   out_6036032580712144890[443] = 0;
   out_6036032580712144890[444] = 0;
   out_6036032580712144890[445] = 0;
   out_6036032580712144890[446] = 0;
   out_6036032580712144890[447] = 0;
   out_6036032580712144890[448] = 0;
   out_6036032580712144890[449] = 0;
   out_6036032580712144890[450] = 0;
   out_6036032580712144890[451] = 0;
   out_6036032580712144890[452] = 0;
   out_6036032580712144890[453] = 0;
   out_6036032580712144890[454] = 0;
   out_6036032580712144890[455] = 0;
   out_6036032580712144890[456] = 0;
   out_6036032580712144890[457] = 0;
   out_6036032580712144890[458] = 0;
   out_6036032580712144890[459] = 0;
   out_6036032580712144890[460] = 0;
   out_6036032580712144890[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_653667760006229873) {
   out_653667760006229873[0] = dt*state[7] + state[0];
   out_653667760006229873[1] = dt*state[8] + state[1];
   out_653667760006229873[2] = dt*state[9] + state[2];
   out_653667760006229873[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_653667760006229873[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_653667760006229873[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_653667760006229873[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_653667760006229873[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_653667760006229873[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_653667760006229873[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_653667760006229873[10] = state[10];
   out_653667760006229873[11] = state[11];
   out_653667760006229873[12] = state[12];
   out_653667760006229873[13] = state[13];
   out_653667760006229873[14] = state[14];
   out_653667760006229873[15] = state[15];
   out_653667760006229873[16] = state[16];
   out_653667760006229873[17] = state[17];
   out_653667760006229873[18] = state[18];
   out_653667760006229873[19] = state[19];
   out_653667760006229873[20] = state[20];
   out_653667760006229873[21] = state[21];
}
void F_fun(double *state, double dt, double *out_8944506884882647575) {
   out_8944506884882647575[0] = 1;
   out_8944506884882647575[1] = 0;
   out_8944506884882647575[2] = 0;
   out_8944506884882647575[3] = 0;
   out_8944506884882647575[4] = 0;
   out_8944506884882647575[5] = 0;
   out_8944506884882647575[6] = dt;
   out_8944506884882647575[7] = 0;
   out_8944506884882647575[8] = 0;
   out_8944506884882647575[9] = 0;
   out_8944506884882647575[10] = 0;
   out_8944506884882647575[11] = 0;
   out_8944506884882647575[12] = 0;
   out_8944506884882647575[13] = 0;
   out_8944506884882647575[14] = 0;
   out_8944506884882647575[15] = 0;
   out_8944506884882647575[16] = 0;
   out_8944506884882647575[17] = 0;
   out_8944506884882647575[18] = 0;
   out_8944506884882647575[19] = 0;
   out_8944506884882647575[20] = 0;
   out_8944506884882647575[21] = 0;
   out_8944506884882647575[22] = 1;
   out_8944506884882647575[23] = 0;
   out_8944506884882647575[24] = 0;
   out_8944506884882647575[25] = 0;
   out_8944506884882647575[26] = 0;
   out_8944506884882647575[27] = 0;
   out_8944506884882647575[28] = dt;
   out_8944506884882647575[29] = 0;
   out_8944506884882647575[30] = 0;
   out_8944506884882647575[31] = 0;
   out_8944506884882647575[32] = 0;
   out_8944506884882647575[33] = 0;
   out_8944506884882647575[34] = 0;
   out_8944506884882647575[35] = 0;
   out_8944506884882647575[36] = 0;
   out_8944506884882647575[37] = 0;
   out_8944506884882647575[38] = 0;
   out_8944506884882647575[39] = 0;
   out_8944506884882647575[40] = 0;
   out_8944506884882647575[41] = 0;
   out_8944506884882647575[42] = 0;
   out_8944506884882647575[43] = 0;
   out_8944506884882647575[44] = 1;
   out_8944506884882647575[45] = 0;
   out_8944506884882647575[46] = 0;
   out_8944506884882647575[47] = 0;
   out_8944506884882647575[48] = 0;
   out_8944506884882647575[49] = 0;
   out_8944506884882647575[50] = dt;
   out_8944506884882647575[51] = 0;
   out_8944506884882647575[52] = 0;
   out_8944506884882647575[53] = 0;
   out_8944506884882647575[54] = 0;
   out_8944506884882647575[55] = 0;
   out_8944506884882647575[56] = 0;
   out_8944506884882647575[57] = 0;
   out_8944506884882647575[58] = 0;
   out_8944506884882647575[59] = 0;
   out_8944506884882647575[60] = 0;
   out_8944506884882647575[61] = 0;
   out_8944506884882647575[62] = 0;
   out_8944506884882647575[63] = 0;
   out_8944506884882647575[64] = 0;
   out_8944506884882647575[65] = 0;
   out_8944506884882647575[66] = 1;
   out_8944506884882647575[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8944506884882647575[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_8944506884882647575[69] = 0;
   out_8944506884882647575[70] = 0;
   out_8944506884882647575[71] = 0;
   out_8944506884882647575[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8944506884882647575[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8944506884882647575[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8944506884882647575[75] = 0;
   out_8944506884882647575[76] = 0;
   out_8944506884882647575[77] = 0;
   out_8944506884882647575[78] = 0;
   out_8944506884882647575[79] = 0;
   out_8944506884882647575[80] = 0;
   out_8944506884882647575[81] = 0;
   out_8944506884882647575[82] = 0;
   out_8944506884882647575[83] = 0;
   out_8944506884882647575[84] = 0;
   out_8944506884882647575[85] = 0;
   out_8944506884882647575[86] = 0;
   out_8944506884882647575[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_8944506884882647575[88] = 1;
   out_8944506884882647575[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_8944506884882647575[90] = 0;
   out_8944506884882647575[91] = 0;
   out_8944506884882647575[92] = 0;
   out_8944506884882647575[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8944506884882647575[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8944506884882647575[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8944506884882647575[96] = 0;
   out_8944506884882647575[97] = 0;
   out_8944506884882647575[98] = 0;
   out_8944506884882647575[99] = 0;
   out_8944506884882647575[100] = 0;
   out_8944506884882647575[101] = 0;
   out_8944506884882647575[102] = 0;
   out_8944506884882647575[103] = 0;
   out_8944506884882647575[104] = 0;
   out_8944506884882647575[105] = 0;
   out_8944506884882647575[106] = 0;
   out_8944506884882647575[107] = 0;
   out_8944506884882647575[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_8944506884882647575[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_8944506884882647575[110] = 1;
   out_8944506884882647575[111] = 0;
   out_8944506884882647575[112] = 0;
   out_8944506884882647575[113] = 0;
   out_8944506884882647575[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8944506884882647575[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8944506884882647575[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8944506884882647575[117] = 0;
   out_8944506884882647575[118] = 0;
   out_8944506884882647575[119] = 0;
   out_8944506884882647575[120] = 0;
   out_8944506884882647575[121] = 0;
   out_8944506884882647575[122] = 0;
   out_8944506884882647575[123] = 0;
   out_8944506884882647575[124] = 0;
   out_8944506884882647575[125] = 0;
   out_8944506884882647575[126] = 0;
   out_8944506884882647575[127] = 0;
   out_8944506884882647575[128] = 0;
   out_8944506884882647575[129] = 0;
   out_8944506884882647575[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8944506884882647575[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_8944506884882647575[132] = 1;
   out_8944506884882647575[133] = 0;
   out_8944506884882647575[134] = 0;
   out_8944506884882647575[135] = 0;
   out_8944506884882647575[136] = 0;
   out_8944506884882647575[137] = 0;
   out_8944506884882647575[138] = 0;
   out_8944506884882647575[139] = 0;
   out_8944506884882647575[140] = 0;
   out_8944506884882647575[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8944506884882647575[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8944506884882647575[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8944506884882647575[144] = 0;
   out_8944506884882647575[145] = 0;
   out_8944506884882647575[146] = 0;
   out_8944506884882647575[147] = 0;
   out_8944506884882647575[148] = 0;
   out_8944506884882647575[149] = 0;
   out_8944506884882647575[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_8944506884882647575[151] = 0;
   out_8944506884882647575[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_8944506884882647575[153] = 0;
   out_8944506884882647575[154] = 1;
   out_8944506884882647575[155] = 0;
   out_8944506884882647575[156] = 0;
   out_8944506884882647575[157] = 0;
   out_8944506884882647575[158] = 0;
   out_8944506884882647575[159] = 0;
   out_8944506884882647575[160] = 0;
   out_8944506884882647575[161] = 0;
   out_8944506884882647575[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_8944506884882647575[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8944506884882647575[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8944506884882647575[165] = 0;
   out_8944506884882647575[166] = 0;
   out_8944506884882647575[167] = 0;
   out_8944506884882647575[168] = 0;
   out_8944506884882647575[169] = 0;
   out_8944506884882647575[170] = 0;
   out_8944506884882647575[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_8944506884882647575[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_8944506884882647575[173] = 0;
   out_8944506884882647575[174] = 0;
   out_8944506884882647575[175] = 0;
   out_8944506884882647575[176] = 1;
   out_8944506884882647575[177] = 0;
   out_8944506884882647575[178] = 0;
   out_8944506884882647575[179] = 0;
   out_8944506884882647575[180] = 0;
   out_8944506884882647575[181] = 0;
   out_8944506884882647575[182] = 0;
   out_8944506884882647575[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_8944506884882647575[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_8944506884882647575[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8944506884882647575[186] = 0;
   out_8944506884882647575[187] = 0;
   out_8944506884882647575[188] = 0;
   out_8944506884882647575[189] = 0;
   out_8944506884882647575[190] = 0;
   out_8944506884882647575[191] = 0;
   out_8944506884882647575[192] = 0;
   out_8944506884882647575[193] = 0;
   out_8944506884882647575[194] = 0;
   out_8944506884882647575[195] = 0;
   out_8944506884882647575[196] = 0;
   out_8944506884882647575[197] = 0;
   out_8944506884882647575[198] = 1;
   out_8944506884882647575[199] = 0;
   out_8944506884882647575[200] = 0;
   out_8944506884882647575[201] = 0;
   out_8944506884882647575[202] = 0;
   out_8944506884882647575[203] = 0;
   out_8944506884882647575[204] = 0;
   out_8944506884882647575[205] = 0;
   out_8944506884882647575[206] = 0;
   out_8944506884882647575[207] = 0;
   out_8944506884882647575[208] = 0;
   out_8944506884882647575[209] = 0;
   out_8944506884882647575[210] = 0;
   out_8944506884882647575[211] = 0;
   out_8944506884882647575[212] = 0;
   out_8944506884882647575[213] = 0;
   out_8944506884882647575[214] = 0;
   out_8944506884882647575[215] = 0;
   out_8944506884882647575[216] = 0;
   out_8944506884882647575[217] = 0;
   out_8944506884882647575[218] = 0;
   out_8944506884882647575[219] = 0;
   out_8944506884882647575[220] = 1;
   out_8944506884882647575[221] = 0;
   out_8944506884882647575[222] = 0;
   out_8944506884882647575[223] = 0;
   out_8944506884882647575[224] = 0;
   out_8944506884882647575[225] = 0;
   out_8944506884882647575[226] = 0;
   out_8944506884882647575[227] = 0;
   out_8944506884882647575[228] = 0;
   out_8944506884882647575[229] = 0;
   out_8944506884882647575[230] = 0;
   out_8944506884882647575[231] = 0;
   out_8944506884882647575[232] = 0;
   out_8944506884882647575[233] = 0;
   out_8944506884882647575[234] = 0;
   out_8944506884882647575[235] = 0;
   out_8944506884882647575[236] = 0;
   out_8944506884882647575[237] = 0;
   out_8944506884882647575[238] = 0;
   out_8944506884882647575[239] = 0;
   out_8944506884882647575[240] = 0;
   out_8944506884882647575[241] = 0;
   out_8944506884882647575[242] = 1;
   out_8944506884882647575[243] = 0;
   out_8944506884882647575[244] = 0;
   out_8944506884882647575[245] = 0;
   out_8944506884882647575[246] = 0;
   out_8944506884882647575[247] = 0;
   out_8944506884882647575[248] = 0;
   out_8944506884882647575[249] = 0;
   out_8944506884882647575[250] = 0;
   out_8944506884882647575[251] = 0;
   out_8944506884882647575[252] = 0;
   out_8944506884882647575[253] = 0;
   out_8944506884882647575[254] = 0;
   out_8944506884882647575[255] = 0;
   out_8944506884882647575[256] = 0;
   out_8944506884882647575[257] = 0;
   out_8944506884882647575[258] = 0;
   out_8944506884882647575[259] = 0;
   out_8944506884882647575[260] = 0;
   out_8944506884882647575[261] = 0;
   out_8944506884882647575[262] = 0;
   out_8944506884882647575[263] = 0;
   out_8944506884882647575[264] = 1;
   out_8944506884882647575[265] = 0;
   out_8944506884882647575[266] = 0;
   out_8944506884882647575[267] = 0;
   out_8944506884882647575[268] = 0;
   out_8944506884882647575[269] = 0;
   out_8944506884882647575[270] = 0;
   out_8944506884882647575[271] = 0;
   out_8944506884882647575[272] = 0;
   out_8944506884882647575[273] = 0;
   out_8944506884882647575[274] = 0;
   out_8944506884882647575[275] = 0;
   out_8944506884882647575[276] = 0;
   out_8944506884882647575[277] = 0;
   out_8944506884882647575[278] = 0;
   out_8944506884882647575[279] = 0;
   out_8944506884882647575[280] = 0;
   out_8944506884882647575[281] = 0;
   out_8944506884882647575[282] = 0;
   out_8944506884882647575[283] = 0;
   out_8944506884882647575[284] = 0;
   out_8944506884882647575[285] = 0;
   out_8944506884882647575[286] = 1;
   out_8944506884882647575[287] = 0;
   out_8944506884882647575[288] = 0;
   out_8944506884882647575[289] = 0;
   out_8944506884882647575[290] = 0;
   out_8944506884882647575[291] = 0;
   out_8944506884882647575[292] = 0;
   out_8944506884882647575[293] = 0;
   out_8944506884882647575[294] = 0;
   out_8944506884882647575[295] = 0;
   out_8944506884882647575[296] = 0;
   out_8944506884882647575[297] = 0;
   out_8944506884882647575[298] = 0;
   out_8944506884882647575[299] = 0;
   out_8944506884882647575[300] = 0;
   out_8944506884882647575[301] = 0;
   out_8944506884882647575[302] = 0;
   out_8944506884882647575[303] = 0;
   out_8944506884882647575[304] = 0;
   out_8944506884882647575[305] = 0;
   out_8944506884882647575[306] = 0;
   out_8944506884882647575[307] = 0;
   out_8944506884882647575[308] = 1;
   out_8944506884882647575[309] = 0;
   out_8944506884882647575[310] = 0;
   out_8944506884882647575[311] = 0;
   out_8944506884882647575[312] = 0;
   out_8944506884882647575[313] = 0;
   out_8944506884882647575[314] = 0;
   out_8944506884882647575[315] = 0;
   out_8944506884882647575[316] = 0;
   out_8944506884882647575[317] = 0;
   out_8944506884882647575[318] = 0;
   out_8944506884882647575[319] = 0;
   out_8944506884882647575[320] = 0;
   out_8944506884882647575[321] = 0;
   out_8944506884882647575[322] = 0;
   out_8944506884882647575[323] = 0;
   out_8944506884882647575[324] = 0;
   out_8944506884882647575[325] = 0;
   out_8944506884882647575[326] = 0;
   out_8944506884882647575[327] = 0;
   out_8944506884882647575[328] = 0;
   out_8944506884882647575[329] = 0;
   out_8944506884882647575[330] = 1;
   out_8944506884882647575[331] = 0;
   out_8944506884882647575[332] = 0;
   out_8944506884882647575[333] = 0;
   out_8944506884882647575[334] = 0;
   out_8944506884882647575[335] = 0;
   out_8944506884882647575[336] = 0;
   out_8944506884882647575[337] = 0;
   out_8944506884882647575[338] = 0;
   out_8944506884882647575[339] = 0;
   out_8944506884882647575[340] = 0;
   out_8944506884882647575[341] = 0;
   out_8944506884882647575[342] = 0;
   out_8944506884882647575[343] = 0;
   out_8944506884882647575[344] = 0;
   out_8944506884882647575[345] = 0;
   out_8944506884882647575[346] = 0;
   out_8944506884882647575[347] = 0;
   out_8944506884882647575[348] = 0;
   out_8944506884882647575[349] = 0;
   out_8944506884882647575[350] = 0;
   out_8944506884882647575[351] = 0;
   out_8944506884882647575[352] = 1;
   out_8944506884882647575[353] = 0;
   out_8944506884882647575[354] = 0;
   out_8944506884882647575[355] = 0;
   out_8944506884882647575[356] = 0;
   out_8944506884882647575[357] = 0;
   out_8944506884882647575[358] = 0;
   out_8944506884882647575[359] = 0;
   out_8944506884882647575[360] = 0;
   out_8944506884882647575[361] = 0;
   out_8944506884882647575[362] = 0;
   out_8944506884882647575[363] = 0;
   out_8944506884882647575[364] = 0;
   out_8944506884882647575[365] = 0;
   out_8944506884882647575[366] = 0;
   out_8944506884882647575[367] = 0;
   out_8944506884882647575[368] = 0;
   out_8944506884882647575[369] = 0;
   out_8944506884882647575[370] = 0;
   out_8944506884882647575[371] = 0;
   out_8944506884882647575[372] = 0;
   out_8944506884882647575[373] = 0;
   out_8944506884882647575[374] = 1;
   out_8944506884882647575[375] = 0;
   out_8944506884882647575[376] = 0;
   out_8944506884882647575[377] = 0;
   out_8944506884882647575[378] = 0;
   out_8944506884882647575[379] = 0;
   out_8944506884882647575[380] = 0;
   out_8944506884882647575[381] = 0;
   out_8944506884882647575[382] = 0;
   out_8944506884882647575[383] = 0;
   out_8944506884882647575[384] = 0;
   out_8944506884882647575[385] = 0;
   out_8944506884882647575[386] = 0;
   out_8944506884882647575[387] = 0;
   out_8944506884882647575[388] = 0;
   out_8944506884882647575[389] = 0;
   out_8944506884882647575[390] = 0;
   out_8944506884882647575[391] = 0;
   out_8944506884882647575[392] = 0;
   out_8944506884882647575[393] = 0;
   out_8944506884882647575[394] = 0;
   out_8944506884882647575[395] = 0;
   out_8944506884882647575[396] = 1;
   out_8944506884882647575[397] = 0;
   out_8944506884882647575[398] = 0;
   out_8944506884882647575[399] = 0;
   out_8944506884882647575[400] = 0;
   out_8944506884882647575[401] = 0;
   out_8944506884882647575[402] = 0;
   out_8944506884882647575[403] = 0;
   out_8944506884882647575[404] = 0;
   out_8944506884882647575[405] = 0;
   out_8944506884882647575[406] = 0;
   out_8944506884882647575[407] = 0;
   out_8944506884882647575[408] = 0;
   out_8944506884882647575[409] = 0;
   out_8944506884882647575[410] = 0;
   out_8944506884882647575[411] = 0;
   out_8944506884882647575[412] = 0;
   out_8944506884882647575[413] = 0;
   out_8944506884882647575[414] = 0;
   out_8944506884882647575[415] = 0;
   out_8944506884882647575[416] = 0;
   out_8944506884882647575[417] = 0;
   out_8944506884882647575[418] = 1;
   out_8944506884882647575[419] = 0;
   out_8944506884882647575[420] = 0;
   out_8944506884882647575[421] = 0;
   out_8944506884882647575[422] = 0;
   out_8944506884882647575[423] = 0;
   out_8944506884882647575[424] = 0;
   out_8944506884882647575[425] = 0;
   out_8944506884882647575[426] = 0;
   out_8944506884882647575[427] = 0;
   out_8944506884882647575[428] = 0;
   out_8944506884882647575[429] = 0;
   out_8944506884882647575[430] = 0;
   out_8944506884882647575[431] = 0;
   out_8944506884882647575[432] = 0;
   out_8944506884882647575[433] = 0;
   out_8944506884882647575[434] = 0;
   out_8944506884882647575[435] = 0;
   out_8944506884882647575[436] = 0;
   out_8944506884882647575[437] = 0;
   out_8944506884882647575[438] = 0;
   out_8944506884882647575[439] = 0;
   out_8944506884882647575[440] = 1;
}
void h_4(double *state, double *unused, double *out_6967130088459663654) {
   out_6967130088459663654[0] = state[10] + state[13];
   out_6967130088459663654[1] = state[11] + state[14];
   out_6967130088459663654[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_2805776108884249108) {
   out_2805776108884249108[0] = 0;
   out_2805776108884249108[1] = 0;
   out_2805776108884249108[2] = 0;
   out_2805776108884249108[3] = 0;
   out_2805776108884249108[4] = 0;
   out_2805776108884249108[5] = 0;
   out_2805776108884249108[6] = 0;
   out_2805776108884249108[7] = 0;
   out_2805776108884249108[8] = 0;
   out_2805776108884249108[9] = 0;
   out_2805776108884249108[10] = 1;
   out_2805776108884249108[11] = 0;
   out_2805776108884249108[12] = 0;
   out_2805776108884249108[13] = 1;
   out_2805776108884249108[14] = 0;
   out_2805776108884249108[15] = 0;
   out_2805776108884249108[16] = 0;
   out_2805776108884249108[17] = 0;
   out_2805776108884249108[18] = 0;
   out_2805776108884249108[19] = 0;
   out_2805776108884249108[20] = 0;
   out_2805776108884249108[21] = 0;
   out_2805776108884249108[22] = 0;
   out_2805776108884249108[23] = 0;
   out_2805776108884249108[24] = 0;
   out_2805776108884249108[25] = 0;
   out_2805776108884249108[26] = 0;
   out_2805776108884249108[27] = 0;
   out_2805776108884249108[28] = 0;
   out_2805776108884249108[29] = 0;
   out_2805776108884249108[30] = 0;
   out_2805776108884249108[31] = 0;
   out_2805776108884249108[32] = 0;
   out_2805776108884249108[33] = 1;
   out_2805776108884249108[34] = 0;
   out_2805776108884249108[35] = 0;
   out_2805776108884249108[36] = 1;
   out_2805776108884249108[37] = 0;
   out_2805776108884249108[38] = 0;
   out_2805776108884249108[39] = 0;
   out_2805776108884249108[40] = 0;
   out_2805776108884249108[41] = 0;
   out_2805776108884249108[42] = 0;
   out_2805776108884249108[43] = 0;
   out_2805776108884249108[44] = 0;
   out_2805776108884249108[45] = 0;
   out_2805776108884249108[46] = 0;
   out_2805776108884249108[47] = 0;
   out_2805776108884249108[48] = 0;
   out_2805776108884249108[49] = 0;
   out_2805776108884249108[50] = 0;
   out_2805776108884249108[51] = 0;
   out_2805776108884249108[52] = 0;
   out_2805776108884249108[53] = 0;
   out_2805776108884249108[54] = 0;
   out_2805776108884249108[55] = 0;
   out_2805776108884249108[56] = 1;
   out_2805776108884249108[57] = 0;
   out_2805776108884249108[58] = 0;
   out_2805776108884249108[59] = 1;
   out_2805776108884249108[60] = 0;
   out_2805776108884249108[61] = 0;
   out_2805776108884249108[62] = 0;
   out_2805776108884249108[63] = 0;
   out_2805776108884249108[64] = 0;
   out_2805776108884249108[65] = 0;
}
void h_9(double *state, double *unused, double *out_5944074116138401933) {
   out_5944074116138401933[0] = state[10];
   out_5944074116138401933[1] = state[11];
   out_5944074116138401933[2] = state[12];
}
void H_9(double *state, double *unused, double *out_2564586462254658463) {
   out_2564586462254658463[0] = 0;
   out_2564586462254658463[1] = 0;
   out_2564586462254658463[2] = 0;
   out_2564586462254658463[3] = 0;
   out_2564586462254658463[4] = 0;
   out_2564586462254658463[5] = 0;
   out_2564586462254658463[6] = 0;
   out_2564586462254658463[7] = 0;
   out_2564586462254658463[8] = 0;
   out_2564586462254658463[9] = 0;
   out_2564586462254658463[10] = 1;
   out_2564586462254658463[11] = 0;
   out_2564586462254658463[12] = 0;
   out_2564586462254658463[13] = 0;
   out_2564586462254658463[14] = 0;
   out_2564586462254658463[15] = 0;
   out_2564586462254658463[16] = 0;
   out_2564586462254658463[17] = 0;
   out_2564586462254658463[18] = 0;
   out_2564586462254658463[19] = 0;
   out_2564586462254658463[20] = 0;
   out_2564586462254658463[21] = 0;
   out_2564586462254658463[22] = 0;
   out_2564586462254658463[23] = 0;
   out_2564586462254658463[24] = 0;
   out_2564586462254658463[25] = 0;
   out_2564586462254658463[26] = 0;
   out_2564586462254658463[27] = 0;
   out_2564586462254658463[28] = 0;
   out_2564586462254658463[29] = 0;
   out_2564586462254658463[30] = 0;
   out_2564586462254658463[31] = 0;
   out_2564586462254658463[32] = 0;
   out_2564586462254658463[33] = 1;
   out_2564586462254658463[34] = 0;
   out_2564586462254658463[35] = 0;
   out_2564586462254658463[36] = 0;
   out_2564586462254658463[37] = 0;
   out_2564586462254658463[38] = 0;
   out_2564586462254658463[39] = 0;
   out_2564586462254658463[40] = 0;
   out_2564586462254658463[41] = 0;
   out_2564586462254658463[42] = 0;
   out_2564586462254658463[43] = 0;
   out_2564586462254658463[44] = 0;
   out_2564586462254658463[45] = 0;
   out_2564586462254658463[46] = 0;
   out_2564586462254658463[47] = 0;
   out_2564586462254658463[48] = 0;
   out_2564586462254658463[49] = 0;
   out_2564586462254658463[50] = 0;
   out_2564586462254658463[51] = 0;
   out_2564586462254658463[52] = 0;
   out_2564586462254658463[53] = 0;
   out_2564586462254658463[54] = 0;
   out_2564586462254658463[55] = 0;
   out_2564586462254658463[56] = 1;
   out_2564586462254658463[57] = 0;
   out_2564586462254658463[58] = 0;
   out_2564586462254658463[59] = 0;
   out_2564586462254658463[60] = 0;
   out_2564586462254658463[61] = 0;
   out_2564586462254658463[62] = 0;
   out_2564586462254658463[63] = 0;
   out_2564586462254658463[64] = 0;
   out_2564586462254658463[65] = 0;
}
void h_10(double *state, double *unused, double *out_3024176660760462318) {
   out_3024176660760462318[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_3024176660760462318[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_3024176660760462318[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_3594957374532062379) {
   out_3594957374532062379[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_3594957374532062379[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3594957374532062379[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_3594957374532062379[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3594957374532062379[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3594957374532062379[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3594957374532062379[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3594957374532062379[7] = 0;
   out_3594957374532062379[8] = 0;
   out_3594957374532062379[9] = 0;
   out_3594957374532062379[10] = 0;
   out_3594957374532062379[11] = 0;
   out_3594957374532062379[12] = 0;
   out_3594957374532062379[13] = 0;
   out_3594957374532062379[14] = 0;
   out_3594957374532062379[15] = 0;
   out_3594957374532062379[16] = 1;
   out_3594957374532062379[17] = 0;
   out_3594957374532062379[18] = 0;
   out_3594957374532062379[19] = 1;
   out_3594957374532062379[20] = 0;
   out_3594957374532062379[21] = 0;
   out_3594957374532062379[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_3594957374532062379[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_3594957374532062379[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_3594957374532062379[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3594957374532062379[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3594957374532062379[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3594957374532062379[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3594957374532062379[29] = 0;
   out_3594957374532062379[30] = 0;
   out_3594957374532062379[31] = 0;
   out_3594957374532062379[32] = 0;
   out_3594957374532062379[33] = 0;
   out_3594957374532062379[34] = 0;
   out_3594957374532062379[35] = 0;
   out_3594957374532062379[36] = 0;
   out_3594957374532062379[37] = 0;
   out_3594957374532062379[38] = 0;
   out_3594957374532062379[39] = 1;
   out_3594957374532062379[40] = 0;
   out_3594957374532062379[41] = 0;
   out_3594957374532062379[42] = 1;
   out_3594957374532062379[43] = 0;
   out_3594957374532062379[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_3594957374532062379[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_3594957374532062379[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_3594957374532062379[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_3594957374532062379[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_3594957374532062379[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_3594957374532062379[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_3594957374532062379[51] = 0;
   out_3594957374532062379[52] = 0;
   out_3594957374532062379[53] = 0;
   out_3594957374532062379[54] = 0;
   out_3594957374532062379[55] = 0;
   out_3594957374532062379[56] = 0;
   out_3594957374532062379[57] = 0;
   out_3594957374532062379[58] = 0;
   out_3594957374532062379[59] = 0;
   out_3594957374532062379[60] = 0;
   out_3594957374532062379[61] = 0;
   out_3594957374532062379[62] = 1;
   out_3594957374532062379[63] = 0;
   out_3594957374532062379[64] = 0;
   out_3594957374532062379[65] = 1;
}
void h_12(double *state, double *unused, double *out_1781567485764299655) {
   out_1781567485764299655[0] = state[0];
   out_1781567485764299655[1] = state[1];
   out_1781567485764299655[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2213680299147712687) {
   out_2213680299147712687[0] = 1;
   out_2213680299147712687[1] = 0;
   out_2213680299147712687[2] = 0;
   out_2213680299147712687[3] = 0;
   out_2213680299147712687[4] = 0;
   out_2213680299147712687[5] = 0;
   out_2213680299147712687[6] = 0;
   out_2213680299147712687[7] = 0;
   out_2213680299147712687[8] = 0;
   out_2213680299147712687[9] = 0;
   out_2213680299147712687[10] = 0;
   out_2213680299147712687[11] = 0;
   out_2213680299147712687[12] = 0;
   out_2213680299147712687[13] = 0;
   out_2213680299147712687[14] = 0;
   out_2213680299147712687[15] = 0;
   out_2213680299147712687[16] = 0;
   out_2213680299147712687[17] = 0;
   out_2213680299147712687[18] = 0;
   out_2213680299147712687[19] = 0;
   out_2213680299147712687[20] = 0;
   out_2213680299147712687[21] = 0;
   out_2213680299147712687[22] = 0;
   out_2213680299147712687[23] = 1;
   out_2213680299147712687[24] = 0;
   out_2213680299147712687[25] = 0;
   out_2213680299147712687[26] = 0;
   out_2213680299147712687[27] = 0;
   out_2213680299147712687[28] = 0;
   out_2213680299147712687[29] = 0;
   out_2213680299147712687[30] = 0;
   out_2213680299147712687[31] = 0;
   out_2213680299147712687[32] = 0;
   out_2213680299147712687[33] = 0;
   out_2213680299147712687[34] = 0;
   out_2213680299147712687[35] = 0;
   out_2213680299147712687[36] = 0;
   out_2213680299147712687[37] = 0;
   out_2213680299147712687[38] = 0;
   out_2213680299147712687[39] = 0;
   out_2213680299147712687[40] = 0;
   out_2213680299147712687[41] = 0;
   out_2213680299147712687[42] = 0;
   out_2213680299147712687[43] = 0;
   out_2213680299147712687[44] = 0;
   out_2213680299147712687[45] = 0;
   out_2213680299147712687[46] = 1;
   out_2213680299147712687[47] = 0;
   out_2213680299147712687[48] = 0;
   out_2213680299147712687[49] = 0;
   out_2213680299147712687[50] = 0;
   out_2213680299147712687[51] = 0;
   out_2213680299147712687[52] = 0;
   out_2213680299147712687[53] = 0;
   out_2213680299147712687[54] = 0;
   out_2213680299147712687[55] = 0;
   out_2213680299147712687[56] = 0;
   out_2213680299147712687[57] = 0;
   out_2213680299147712687[58] = 0;
   out_2213680299147712687[59] = 0;
   out_2213680299147712687[60] = 0;
   out_2213680299147712687[61] = 0;
   out_2213680299147712687[62] = 0;
   out_2213680299147712687[63] = 0;
   out_2213680299147712687[64] = 0;
   out_2213680299147712687[65] = 0;
}
void h_35(double *state, double *unused, double *out_3392135172365373817) {
   out_3392135172365373817[0] = state[7];
   out_3392135172365373817[1] = state[8];
   out_3392135172365373817[2] = state[9];
}
void H_35(double *state, double *unused, double *out_4959243331472726396) {
   out_4959243331472726396[0] = 0;
   out_4959243331472726396[1] = 0;
   out_4959243331472726396[2] = 0;
   out_4959243331472726396[3] = 0;
   out_4959243331472726396[4] = 0;
   out_4959243331472726396[5] = 0;
   out_4959243331472726396[6] = 0;
   out_4959243331472726396[7] = 1;
   out_4959243331472726396[8] = 0;
   out_4959243331472726396[9] = 0;
   out_4959243331472726396[10] = 0;
   out_4959243331472726396[11] = 0;
   out_4959243331472726396[12] = 0;
   out_4959243331472726396[13] = 0;
   out_4959243331472726396[14] = 0;
   out_4959243331472726396[15] = 0;
   out_4959243331472726396[16] = 0;
   out_4959243331472726396[17] = 0;
   out_4959243331472726396[18] = 0;
   out_4959243331472726396[19] = 0;
   out_4959243331472726396[20] = 0;
   out_4959243331472726396[21] = 0;
   out_4959243331472726396[22] = 0;
   out_4959243331472726396[23] = 0;
   out_4959243331472726396[24] = 0;
   out_4959243331472726396[25] = 0;
   out_4959243331472726396[26] = 0;
   out_4959243331472726396[27] = 0;
   out_4959243331472726396[28] = 0;
   out_4959243331472726396[29] = 0;
   out_4959243331472726396[30] = 1;
   out_4959243331472726396[31] = 0;
   out_4959243331472726396[32] = 0;
   out_4959243331472726396[33] = 0;
   out_4959243331472726396[34] = 0;
   out_4959243331472726396[35] = 0;
   out_4959243331472726396[36] = 0;
   out_4959243331472726396[37] = 0;
   out_4959243331472726396[38] = 0;
   out_4959243331472726396[39] = 0;
   out_4959243331472726396[40] = 0;
   out_4959243331472726396[41] = 0;
   out_4959243331472726396[42] = 0;
   out_4959243331472726396[43] = 0;
   out_4959243331472726396[44] = 0;
   out_4959243331472726396[45] = 0;
   out_4959243331472726396[46] = 0;
   out_4959243331472726396[47] = 0;
   out_4959243331472726396[48] = 0;
   out_4959243331472726396[49] = 0;
   out_4959243331472726396[50] = 0;
   out_4959243331472726396[51] = 0;
   out_4959243331472726396[52] = 0;
   out_4959243331472726396[53] = 1;
   out_4959243331472726396[54] = 0;
   out_4959243331472726396[55] = 0;
   out_4959243331472726396[56] = 0;
   out_4959243331472726396[57] = 0;
   out_4959243331472726396[58] = 0;
   out_4959243331472726396[59] = 0;
   out_4959243331472726396[60] = 0;
   out_4959243331472726396[61] = 0;
   out_4959243331472726396[62] = 0;
   out_4959243331472726396[63] = 0;
   out_4959243331472726396[64] = 0;
   out_4959243331472726396[65] = 0;
}
void h_32(double *state, double *unused, double *out_5713026107165599538) {
   out_5713026107165599538[0] = state[3];
   out_5713026107165599538[1] = state[4];
   out_5713026107165599538[2] = state[5];
   out_5713026107165599538[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8507087671459885125) {
   out_8507087671459885125[0] = 0;
   out_8507087671459885125[1] = 0;
   out_8507087671459885125[2] = 0;
   out_8507087671459885125[3] = 1;
   out_8507087671459885125[4] = 0;
   out_8507087671459885125[5] = 0;
   out_8507087671459885125[6] = 0;
   out_8507087671459885125[7] = 0;
   out_8507087671459885125[8] = 0;
   out_8507087671459885125[9] = 0;
   out_8507087671459885125[10] = 0;
   out_8507087671459885125[11] = 0;
   out_8507087671459885125[12] = 0;
   out_8507087671459885125[13] = 0;
   out_8507087671459885125[14] = 0;
   out_8507087671459885125[15] = 0;
   out_8507087671459885125[16] = 0;
   out_8507087671459885125[17] = 0;
   out_8507087671459885125[18] = 0;
   out_8507087671459885125[19] = 0;
   out_8507087671459885125[20] = 0;
   out_8507087671459885125[21] = 0;
   out_8507087671459885125[22] = 0;
   out_8507087671459885125[23] = 0;
   out_8507087671459885125[24] = 0;
   out_8507087671459885125[25] = 0;
   out_8507087671459885125[26] = 1;
   out_8507087671459885125[27] = 0;
   out_8507087671459885125[28] = 0;
   out_8507087671459885125[29] = 0;
   out_8507087671459885125[30] = 0;
   out_8507087671459885125[31] = 0;
   out_8507087671459885125[32] = 0;
   out_8507087671459885125[33] = 0;
   out_8507087671459885125[34] = 0;
   out_8507087671459885125[35] = 0;
   out_8507087671459885125[36] = 0;
   out_8507087671459885125[37] = 0;
   out_8507087671459885125[38] = 0;
   out_8507087671459885125[39] = 0;
   out_8507087671459885125[40] = 0;
   out_8507087671459885125[41] = 0;
   out_8507087671459885125[42] = 0;
   out_8507087671459885125[43] = 0;
   out_8507087671459885125[44] = 0;
   out_8507087671459885125[45] = 0;
   out_8507087671459885125[46] = 0;
   out_8507087671459885125[47] = 0;
   out_8507087671459885125[48] = 0;
   out_8507087671459885125[49] = 1;
   out_8507087671459885125[50] = 0;
   out_8507087671459885125[51] = 0;
   out_8507087671459885125[52] = 0;
   out_8507087671459885125[53] = 0;
   out_8507087671459885125[54] = 0;
   out_8507087671459885125[55] = 0;
   out_8507087671459885125[56] = 0;
   out_8507087671459885125[57] = 0;
   out_8507087671459885125[58] = 0;
   out_8507087671459885125[59] = 0;
   out_8507087671459885125[60] = 0;
   out_8507087671459885125[61] = 0;
   out_8507087671459885125[62] = 0;
   out_8507087671459885125[63] = 0;
   out_8507087671459885125[64] = 0;
   out_8507087671459885125[65] = 0;
   out_8507087671459885125[66] = 0;
   out_8507087671459885125[67] = 0;
   out_8507087671459885125[68] = 0;
   out_8507087671459885125[69] = 0;
   out_8507087671459885125[70] = 0;
   out_8507087671459885125[71] = 0;
   out_8507087671459885125[72] = 1;
   out_8507087671459885125[73] = 0;
   out_8507087671459885125[74] = 0;
   out_8507087671459885125[75] = 0;
   out_8507087671459885125[76] = 0;
   out_8507087671459885125[77] = 0;
   out_8507087671459885125[78] = 0;
   out_8507087671459885125[79] = 0;
   out_8507087671459885125[80] = 0;
   out_8507087671459885125[81] = 0;
   out_8507087671459885125[82] = 0;
   out_8507087671459885125[83] = 0;
   out_8507087671459885125[84] = 0;
   out_8507087671459885125[85] = 0;
   out_8507087671459885125[86] = 0;
   out_8507087671459885125[87] = 0;
}
void h_13(double *state, double *unused, double *out_8591731605088062953) {
   out_8591731605088062953[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_8591731605088062953[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_8591731605088062953[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_1226506526531533769) {
   out_1226506526531533769[0] = 0;
   out_1226506526531533769[1] = 0;
   out_1226506526531533769[2] = 0;
   out_1226506526531533769[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1226506526531533769[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1226506526531533769[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_1226506526531533769[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1226506526531533769[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_1226506526531533769[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_1226506526531533769[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_1226506526531533769[10] = 0;
   out_1226506526531533769[11] = 0;
   out_1226506526531533769[12] = 0;
   out_1226506526531533769[13] = 0;
   out_1226506526531533769[14] = 0;
   out_1226506526531533769[15] = 0;
   out_1226506526531533769[16] = 0;
   out_1226506526531533769[17] = 0;
   out_1226506526531533769[18] = 0;
   out_1226506526531533769[19] = 0;
   out_1226506526531533769[20] = 0;
   out_1226506526531533769[21] = 0;
   out_1226506526531533769[22] = 0;
   out_1226506526531533769[23] = 0;
   out_1226506526531533769[24] = 0;
   out_1226506526531533769[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_1226506526531533769[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1226506526531533769[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1226506526531533769[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_1226506526531533769[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_1226506526531533769[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_1226506526531533769[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_1226506526531533769[32] = 0;
   out_1226506526531533769[33] = 0;
   out_1226506526531533769[34] = 0;
   out_1226506526531533769[35] = 0;
   out_1226506526531533769[36] = 0;
   out_1226506526531533769[37] = 0;
   out_1226506526531533769[38] = 0;
   out_1226506526531533769[39] = 0;
   out_1226506526531533769[40] = 0;
   out_1226506526531533769[41] = 0;
   out_1226506526531533769[42] = 0;
   out_1226506526531533769[43] = 0;
   out_1226506526531533769[44] = 0;
   out_1226506526531533769[45] = 0;
   out_1226506526531533769[46] = 0;
   out_1226506526531533769[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_1226506526531533769[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_1226506526531533769[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_1226506526531533769[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_1226506526531533769[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_1226506526531533769[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_1226506526531533769[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_1226506526531533769[54] = 0;
   out_1226506526531533769[55] = 0;
   out_1226506526531533769[56] = 0;
   out_1226506526531533769[57] = 0;
   out_1226506526531533769[58] = 0;
   out_1226506526531533769[59] = 0;
   out_1226506526531533769[60] = 0;
   out_1226506526531533769[61] = 0;
   out_1226506526531533769[62] = 0;
   out_1226506526531533769[63] = 0;
   out_1226506526531533769[64] = 0;
   out_1226506526531533769[65] = 0;
}
void h_14(double *state, double *unused, double *out_5944074116138401933) {
   out_5944074116138401933[0] = state[10];
   out_5944074116138401933[1] = state[11];
   out_5944074116138401933[2] = state[12];
}
void H_14(double *state, double *unused, double *out_2564586462254658463) {
   out_2564586462254658463[0] = 0;
   out_2564586462254658463[1] = 0;
   out_2564586462254658463[2] = 0;
   out_2564586462254658463[3] = 0;
   out_2564586462254658463[4] = 0;
   out_2564586462254658463[5] = 0;
   out_2564586462254658463[6] = 0;
   out_2564586462254658463[7] = 0;
   out_2564586462254658463[8] = 0;
   out_2564586462254658463[9] = 0;
   out_2564586462254658463[10] = 1;
   out_2564586462254658463[11] = 0;
   out_2564586462254658463[12] = 0;
   out_2564586462254658463[13] = 0;
   out_2564586462254658463[14] = 0;
   out_2564586462254658463[15] = 0;
   out_2564586462254658463[16] = 0;
   out_2564586462254658463[17] = 0;
   out_2564586462254658463[18] = 0;
   out_2564586462254658463[19] = 0;
   out_2564586462254658463[20] = 0;
   out_2564586462254658463[21] = 0;
   out_2564586462254658463[22] = 0;
   out_2564586462254658463[23] = 0;
   out_2564586462254658463[24] = 0;
   out_2564586462254658463[25] = 0;
   out_2564586462254658463[26] = 0;
   out_2564586462254658463[27] = 0;
   out_2564586462254658463[28] = 0;
   out_2564586462254658463[29] = 0;
   out_2564586462254658463[30] = 0;
   out_2564586462254658463[31] = 0;
   out_2564586462254658463[32] = 0;
   out_2564586462254658463[33] = 1;
   out_2564586462254658463[34] = 0;
   out_2564586462254658463[35] = 0;
   out_2564586462254658463[36] = 0;
   out_2564586462254658463[37] = 0;
   out_2564586462254658463[38] = 0;
   out_2564586462254658463[39] = 0;
   out_2564586462254658463[40] = 0;
   out_2564586462254658463[41] = 0;
   out_2564586462254658463[42] = 0;
   out_2564586462254658463[43] = 0;
   out_2564586462254658463[44] = 0;
   out_2564586462254658463[45] = 0;
   out_2564586462254658463[46] = 0;
   out_2564586462254658463[47] = 0;
   out_2564586462254658463[48] = 0;
   out_2564586462254658463[49] = 0;
   out_2564586462254658463[50] = 0;
   out_2564586462254658463[51] = 0;
   out_2564586462254658463[52] = 0;
   out_2564586462254658463[53] = 0;
   out_2564586462254658463[54] = 0;
   out_2564586462254658463[55] = 0;
   out_2564586462254658463[56] = 1;
   out_2564586462254658463[57] = 0;
   out_2564586462254658463[58] = 0;
   out_2564586462254658463[59] = 0;
   out_2564586462254658463[60] = 0;
   out_2564586462254658463[61] = 0;
   out_2564586462254658463[62] = 0;
   out_2564586462254658463[63] = 0;
   out_2564586462254658463[64] = 0;
   out_2564586462254658463[65] = 0;
}
void h_33(double *state, double *unused, double *out_3376577180674409820) {
   out_3376577180674409820[0] = state[16];
   out_3376577180674409820[1] = state[17];
   out_3376577180674409820[2] = state[18];
}
void H_33(double *state, double *unused, double *out_3711442953127215872) {
   out_3711442953127215872[0] = 0;
   out_3711442953127215872[1] = 0;
   out_3711442953127215872[2] = 0;
   out_3711442953127215872[3] = 0;
   out_3711442953127215872[4] = 0;
   out_3711442953127215872[5] = 0;
   out_3711442953127215872[6] = 0;
   out_3711442953127215872[7] = 0;
   out_3711442953127215872[8] = 0;
   out_3711442953127215872[9] = 0;
   out_3711442953127215872[10] = 0;
   out_3711442953127215872[11] = 0;
   out_3711442953127215872[12] = 0;
   out_3711442953127215872[13] = 0;
   out_3711442953127215872[14] = 0;
   out_3711442953127215872[15] = 0;
   out_3711442953127215872[16] = 1;
   out_3711442953127215872[17] = 0;
   out_3711442953127215872[18] = 0;
   out_3711442953127215872[19] = 0;
   out_3711442953127215872[20] = 0;
   out_3711442953127215872[21] = 0;
   out_3711442953127215872[22] = 0;
   out_3711442953127215872[23] = 0;
   out_3711442953127215872[24] = 0;
   out_3711442953127215872[25] = 0;
   out_3711442953127215872[26] = 0;
   out_3711442953127215872[27] = 0;
   out_3711442953127215872[28] = 0;
   out_3711442953127215872[29] = 0;
   out_3711442953127215872[30] = 0;
   out_3711442953127215872[31] = 0;
   out_3711442953127215872[32] = 0;
   out_3711442953127215872[33] = 0;
   out_3711442953127215872[34] = 0;
   out_3711442953127215872[35] = 0;
   out_3711442953127215872[36] = 0;
   out_3711442953127215872[37] = 0;
   out_3711442953127215872[38] = 0;
   out_3711442953127215872[39] = 1;
   out_3711442953127215872[40] = 0;
   out_3711442953127215872[41] = 0;
   out_3711442953127215872[42] = 0;
   out_3711442953127215872[43] = 0;
   out_3711442953127215872[44] = 0;
   out_3711442953127215872[45] = 0;
   out_3711442953127215872[46] = 0;
   out_3711442953127215872[47] = 0;
   out_3711442953127215872[48] = 0;
   out_3711442953127215872[49] = 0;
   out_3711442953127215872[50] = 0;
   out_3711442953127215872[51] = 0;
   out_3711442953127215872[52] = 0;
   out_3711442953127215872[53] = 0;
   out_3711442953127215872[54] = 0;
   out_3711442953127215872[55] = 0;
   out_3711442953127215872[56] = 0;
   out_3711442953127215872[57] = 0;
   out_3711442953127215872[58] = 0;
   out_3711442953127215872[59] = 0;
   out_3711442953127215872[60] = 0;
   out_3711442953127215872[61] = 0;
   out_3711442953127215872[62] = 1;
   out_3711442953127215872[63] = 0;
   out_3711442953127215872[64] = 0;
   out_3711442953127215872[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_907497564161450989) {
  H(in_vec, out_907497564161450989);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_403017012035771763) {
  err_fun(nom_x, delta_x, out_403017012035771763);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2932713747370631150) {
  inv_err_fun(nom_x, true_x, out_2932713747370631150);
}
void live_H_mod_fun(double *state, double *out_6036032580712144890) {
  H_mod_fun(state, out_6036032580712144890);
}
void live_f_fun(double *state, double dt, double *out_653667760006229873) {
  f_fun(state,  dt, out_653667760006229873);
}
void live_F_fun(double *state, double dt, double *out_8944506884882647575) {
  F_fun(state,  dt, out_8944506884882647575);
}
void live_h_4(double *state, double *unused, double *out_6967130088459663654) {
  h_4(state, unused, out_6967130088459663654);
}
void live_H_4(double *state, double *unused, double *out_2805776108884249108) {
  H_4(state, unused, out_2805776108884249108);
}
void live_h_9(double *state, double *unused, double *out_5944074116138401933) {
  h_9(state, unused, out_5944074116138401933);
}
void live_H_9(double *state, double *unused, double *out_2564586462254658463) {
  H_9(state, unused, out_2564586462254658463);
}
void live_h_10(double *state, double *unused, double *out_3024176660760462318) {
  h_10(state, unused, out_3024176660760462318);
}
void live_H_10(double *state, double *unused, double *out_3594957374532062379) {
  H_10(state, unused, out_3594957374532062379);
}
void live_h_12(double *state, double *unused, double *out_1781567485764299655) {
  h_12(state, unused, out_1781567485764299655);
}
void live_H_12(double *state, double *unused, double *out_2213680299147712687) {
  H_12(state, unused, out_2213680299147712687);
}
void live_h_35(double *state, double *unused, double *out_3392135172365373817) {
  h_35(state, unused, out_3392135172365373817);
}
void live_H_35(double *state, double *unused, double *out_4959243331472726396) {
  H_35(state, unused, out_4959243331472726396);
}
void live_h_32(double *state, double *unused, double *out_5713026107165599538) {
  h_32(state, unused, out_5713026107165599538);
}
void live_H_32(double *state, double *unused, double *out_8507087671459885125) {
  H_32(state, unused, out_8507087671459885125);
}
void live_h_13(double *state, double *unused, double *out_8591731605088062953) {
  h_13(state, unused, out_8591731605088062953);
}
void live_H_13(double *state, double *unused, double *out_1226506526531533769) {
  H_13(state, unused, out_1226506526531533769);
}
void live_h_14(double *state, double *unused, double *out_5944074116138401933) {
  h_14(state, unused, out_5944074116138401933);
}
void live_H_14(double *state, double *unused, double *out_2564586462254658463) {
  H_14(state, unused, out_2564586462254658463);
}
void live_h_33(double *state, double *unused, double *out_3376577180674409820) {
  h_33(state, unused, out_3376577180674409820);
}
void live_H_33(double *state, double *unused, double *out_3711442953127215872) {
  H_33(state, unused, out_3711442953127215872);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
